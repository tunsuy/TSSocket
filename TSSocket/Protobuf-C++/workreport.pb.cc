// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "workreport.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace com {
namespace sangfor {
namespace moa {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* PB_WorkReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WorkReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRReadStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRReadStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRCreateWorkReportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRCreateWorkReportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRCreateWorkReportRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRCreateWorkReportRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetWorkReportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetWorkReportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetWorkReportRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetWorkReportRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetWorkReportsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetWorkReportsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetWorkReportsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetWorkReportsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportsNumReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementWorkReportsNumReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportsNumRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementWorkReportsNumRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportsNumRsp_PB_Record_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementWorkReportsNumRsp_PB_Record_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementWorkReportListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportListRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementWorkReportListRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsNumReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsNumReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsNumRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsNumRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRDelWorkReportsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRDelWorkReportsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRDelWorkReportsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRDelWorkReportsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRDelWorkReportsRsp_PB_DelFail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRDelWorkReportsRsp_PB_DelFail_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRModifyWorkReportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRModifyWorkReportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRModifyWorkReportRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRModifyWorkReportRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PersonStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PersonStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeStatisticsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeStatisticsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeStatisticsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeStatisticsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsStatisticsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsStatisticsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PersonWrCreateTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PersonWrCreateTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeDateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeDateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeDateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeDateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeWorkReportsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeWorkReportsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeWorkReportsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetManagementPeriodTimeWorkReportsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_FormModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_FormModel_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRSetFormModelReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRSetFormModelReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRSetFormModelRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRSetFormModelRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetFormModelReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetFormModelReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRGetFormModelRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRGetFormModelRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRFormModelPush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRFormModelPush_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRWebGetWorkReportsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRWebGetWorkReportsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRWebGetWorkReportsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRWebGetWorkReportsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRWebGetManagementWorkReportsNumReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRWebGetManagementWorkReportsNumReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRWebGetManagementWorkReportsNumRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRWebGetManagementWorkReportsNumRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRExportWorkReportsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRExportWorkReportsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRExportWorkReportsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRExportWorkReportsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRWorkReportCountReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRWorkReportCountReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRWorkReportCountRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRWorkReportCountRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_WRWorkReportCountRsp_PB_WRDidCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_WRWorkReportCountRsp_PB_WRDidCount_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_Type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_Status_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_SubmitType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_workreport_2eproto() {
  protobuf_AddDesc_workreport_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "workreport.proto");
  GOOGLE_CHECK(file != NULL);
  PB_WorkReport_descriptor_ = file->message_type(0);
  static const int PB_WorkReport_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, work_report_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, attrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, wrdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, forms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, create_pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, modify_pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, modify_time_),
  };
  PB_WorkReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WorkReport_descriptor_,
      PB_WorkReport::default_instance_,
      PB_WorkReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WorkReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WorkReport));
  PB_WRReadStatus_descriptor_ = file->message_type(1);
  static const int PB_WRReadStatus_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRReadStatus, did_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRReadStatus, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRReadStatus, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRReadStatus, wrdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRReadStatus, read_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRReadStatus, read_time_),
  };
  PB_WRReadStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRReadStatus_descriptor_,
      PB_WRReadStatus::default_instance_,
      PB_WRReadStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRReadStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRReadStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRReadStatus));
  PB_WRCreateWorkReportReq_descriptor_ = file->message_type(2);
  static const int PB_WRCreateWorkReportReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRCreateWorkReportReq, workreport_),
  };
  PB_WRCreateWorkReportReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRCreateWorkReportReq_descriptor_,
      PB_WRCreateWorkReportReq::default_instance_,
      PB_WRCreateWorkReportReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRCreateWorkReportReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRCreateWorkReportReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRCreateWorkReportReq));
  PB_WRCreateWorkReportRsp_descriptor_ = file->message_type(3);
  static const int PB_WRCreateWorkReportRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRCreateWorkReportRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRCreateWorkReportRsp, work_report_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRCreateWorkReportRsp, version_),
  };
  PB_WRCreateWorkReportRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRCreateWorkReportRsp_descriptor_,
      PB_WRCreateWorkReportRsp::default_instance_,
      PB_WRCreateWorkReportRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRCreateWorkReportRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRCreateWorkReportRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRCreateWorkReportRsp));
  PB_WRGetWorkReportReq_descriptor_ = file->message_type(4);
  static const int PB_WRGetWorkReportReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportReq, work_report_id_),
  };
  PB_WRGetWorkReportReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetWorkReportReq_descriptor_,
      PB_WRGetWorkReportReq::default_instance_,
      PB_WRGetWorkReportReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetWorkReportReq));
  PB_WRGetWorkReportRsp_descriptor_ = file->message_type(5);
  static const int PB_WRGetWorkReportRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportRsp, workreport_),
  };
  PB_WRGetWorkReportRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetWorkReportRsp_descriptor_,
      PB_WRGetWorkReportRsp::default_instance_,
      PB_WRGetWorkReportRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetWorkReportRsp));
  PB_WRGetWorkReportsReq_descriptor_ = file->message_type(6);
  static const int PB_WRGetWorkReportsReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsReq, start_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsReq, locals_),
  };
  PB_WRGetWorkReportsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetWorkReportsReq_descriptor_,
      PB_WRGetWorkReportsReq::default_instance_,
      PB_WRGetWorkReportsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetWorkReportsReq));
  PB_WRGetWorkReportsRsp_descriptor_ = file->message_type(7);
  static const int PB_WRGetWorkReportsRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsRsp, workreports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsRsp, dels_),
  };
  PB_WRGetWorkReportsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetWorkReportsRsp_descriptor_,
      PB_WRGetWorkReportsRsp::default_instance_,
      PB_WRGetWorkReportsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetWorkReportsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetWorkReportsRsp));
  PB_WRGetManagementWorkReportsNumReq_descriptor_ = file->message_type(8);
  static const int PB_WRGetManagementWorkReportsNumReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumReq, start_date_),
  };
  PB_WRGetManagementWorkReportsNumReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementWorkReportsNumReq_descriptor_,
      PB_WRGetManagementWorkReportsNumReq::default_instance_,
      PB_WRGetManagementWorkReportsNumReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementWorkReportsNumReq));
  PB_WRGetManagementWorkReportsNumRsp_descriptor_ = file->message_type(9);
  static const int PB_WRGetManagementWorkReportsNumRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp, records_),
  };
  PB_WRGetManagementWorkReportsNumRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementWorkReportsNumRsp_descriptor_,
      PB_WRGetManagementWorkReportsNumRsp::default_instance_,
      PB_WRGetManagementWorkReportsNumRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementWorkReportsNumRsp));
  PB_WRGetManagementWorkReportsNumRsp_PB_Record_descriptor_ = PB_WRGetManagementWorkReportsNumRsp_descriptor_->nested_type(0);
  static const int PB_WRGetManagementWorkReportsNumRsp_PB_Record_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp_PB_Record, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp_PB_Record, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp_PB_Record, read_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp_PB_Record, read_time_),
  };
  PB_WRGetManagementWorkReportsNumRsp_PB_Record_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementWorkReportsNumRsp_PB_Record_descriptor_,
      PB_WRGetManagementWorkReportsNumRsp_PB_Record::default_instance_,
      PB_WRGetManagementWorkReportsNumRsp_PB_Record_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp_PB_Record, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportsNumRsp_PB_Record, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementWorkReportsNumRsp_PB_Record));
  PB_WRGetManagementWorkReportListReq_descriptor_ = file->message_type(10);
  static const int PB_WRGetManagementWorkReportListReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListReq, wrdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListReq, start_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListReq, gids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListReq, skip_),
  };
  PB_WRGetManagementWorkReportListReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementWorkReportListReq_descriptor_,
      PB_WRGetManagementWorkReportListReq::default_instance_,
      PB_WRGetManagementWorkReportListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementWorkReportListReq));
  PB_WRGetManagementWorkReportListRsp_descriptor_ = file->message_type(11);
  static const int PB_WRGetManagementWorkReportListRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListRsp, workreports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListRsp, total_workreports_),
  };
  PB_WRGetManagementWorkReportListRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementWorkReportListRsp_descriptor_,
      PB_WRGetManagementWorkReportListRsp::default_instance_,
      PB_WRGetManagementWorkReportListRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementWorkReportListRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementWorkReportListRsp));
  PB_WRGetManagementGroupWorkReportsNumReq_descriptor_ = file->message_type(12);
  static const int PB_WRGetManagementGroupWorkReportsNumReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumReq, wrdate_),
  };
  PB_WRGetManagementGroupWorkReportsNumReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsNumReq_descriptor_,
      PB_WRGetManagementGroupWorkReportsNumReq::default_instance_,
      PB_WRGetManagementGroupWorkReportsNumReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsNumReq));
  PB_WRGetManagementGroupWorkReportsNumRsp_descriptor_ = file->message_type(13);
  static const int PB_WRGetManagementGroupWorkReportsNumRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumRsp, group_stats_),
  };
  PB_WRGetManagementGroupWorkReportsNumRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsNumRsp_descriptor_,
      PB_WRGetManagementGroupWorkReportsNumRsp::default_instance_,
      PB_WRGetManagementGroupWorkReportsNumRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsNumRsp));
  PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_ = PB_WRGetManagementGroupWorkReportsNumRsp_descriptor_->nested_type(0);
  static const int PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic, count_),
  };
  PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_,
      PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_,
      PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic));
  PB_WRDelWorkReportsReq_descriptor_ = file->message_type(14);
  static const int PB_WRDelWorkReportsReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsReq, work_report_ids_),
  };
  PB_WRDelWorkReportsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRDelWorkReportsReq_descriptor_,
      PB_WRDelWorkReportsReq::default_instance_,
      PB_WRDelWorkReportsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRDelWorkReportsReq));
  PB_WRDelWorkReportsRsp_descriptor_ = file->message_type(15);
  static const int PB_WRDelWorkReportsRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsRsp, fails_),
  };
  PB_WRDelWorkReportsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRDelWorkReportsRsp_descriptor_,
      PB_WRDelWorkReportsRsp::default_instance_,
      PB_WRDelWorkReportsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRDelWorkReportsRsp));
  PB_WRDelWorkReportsRsp_PB_DelFail_descriptor_ = PB_WRDelWorkReportsRsp_descriptor_->nested_type(0);
  static const int PB_WRDelWorkReportsRsp_PB_DelFail_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsRsp_PB_DelFail, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsRsp_PB_DelFail, work_report_id_),
  };
  PB_WRDelWorkReportsRsp_PB_DelFail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRDelWorkReportsRsp_PB_DelFail_descriptor_,
      PB_WRDelWorkReportsRsp_PB_DelFail::default_instance_,
      PB_WRDelWorkReportsRsp_PB_DelFail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsRsp_PB_DelFail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRDelWorkReportsRsp_PB_DelFail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRDelWorkReportsRsp_PB_DelFail));
  PB_WRModifyWorkReportReq_descriptor_ = file->message_type(16);
  static const int PB_WRModifyWorkReportReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRModifyWorkReportReq, workreport_),
  };
  PB_WRModifyWorkReportReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRModifyWorkReportReq_descriptor_,
      PB_WRModifyWorkReportReq::default_instance_,
      PB_WRModifyWorkReportReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRModifyWorkReportReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRModifyWorkReportReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRModifyWorkReportReq));
  PB_WRModifyWorkReportRsp_descriptor_ = file->message_type(17);
  static const int PB_WRModifyWorkReportRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRModifyWorkReportRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRModifyWorkReportRsp, version_),
  };
  PB_WRModifyWorkReportRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRModifyWorkReportRsp_descriptor_,
      PB_WRModifyWorkReportRsp::default_instance_,
      PB_WRModifyWorkReportRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRModifyWorkReportRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRModifyWorkReportRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRModifyWorkReportRsp));
  PB_PersonStatistics_descriptor_ = file->message_type(18);
  static const int PB_PersonStatistics_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PersonStatistics, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PersonStatistics, wrdates_),
  };
  PB_PersonStatistics_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_PersonStatistics_descriptor_,
      PB_PersonStatistics::default_instance_,
      PB_PersonStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PersonStatistics, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PersonStatistics, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_PersonStatistics));
  PB_WRGetManagementPeriodTimeStatisticsReq_descriptor_ = file->message_type(19);
  static const int PB_WRGetManagementPeriodTimeStatisticsReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsReq, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsReq, end_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsReq, gids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsReq, locals_),
  };
  PB_WRGetManagementPeriodTimeStatisticsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeStatisticsReq_descriptor_,
      PB_WRGetManagementPeriodTimeStatisticsReq::default_instance_,
      PB_WRGetManagementPeriodTimeStatisticsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeStatisticsReq));
  PB_WRGetManagementPeriodTimeStatisticsRsp_descriptor_ = file->message_type(20);
  static const int PB_WRGetManagementPeriodTimeStatisticsRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsRsp, total_workreports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsRsp, total_person_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsRsp, person_statisticses_),
  };
  PB_WRGetManagementPeriodTimeStatisticsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeStatisticsRsp_descriptor_,
      PB_WRGetManagementPeriodTimeStatisticsRsp::default_instance_,
      PB_WRGetManagementPeriodTimeStatisticsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeStatisticsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeStatisticsRsp));
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_descriptor_ = file->message_type(21);
  static const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq, end_date_),
  };
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_descriptor_,
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::default_instance_,
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq));
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_descriptor_ = file->message_type(22);
  static const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp, group_stats_),
  };
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_descriptor_,
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::default_instance_,
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp));
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_ = PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_descriptor_->nested_type(0);
  static const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic, count_),
  };
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_,
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_,
      PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic));
  PB_WRGetManagementGroupWorkReportsStatisticsReq_descriptor_ = file->message_type(23);
  static const int PB_WRGetManagementGroupWorkReportsStatisticsReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsReq, wrdate_),
  };
  PB_WRGetManagementGroupWorkReportsStatisticsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsStatisticsReq_descriptor_,
      PB_WRGetManagementGroupWorkReportsStatisticsReq::default_instance_,
      PB_WRGetManagementGroupWorkReportsStatisticsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsStatisticsReq));
  PB_WRGetManagementGroupWorkReportsStatisticsRsp_descriptor_ = file->message_type(24);
  static const int PB_WRGetManagementGroupWorkReportsStatisticsRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp, group_statistics_),
  };
  PB_WRGetManagementGroupWorkReportsStatisticsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsStatisticsRsp_descriptor_,
      PB_WRGetManagementGroupWorkReportsStatisticsRsp::default_instance_,
      PB_WRGetManagementGroupWorkReportsStatisticsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsStatisticsRsp));
  PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_descriptor_ = PB_WRGetManagementGroupWorkReportsStatisticsRsp_descriptor_->nested_type(0);
  static const int PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics, submit_person_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics, unsubmit_person_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics, pids_),
  };
  PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_descriptor_,
      PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::default_instance_,
      PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics));
  PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_descriptor_ = file->message_type(25);
  static const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, wrdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, submit_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, gids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, local_pids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, skip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, pids_),
  };
  PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_descriptor_,
      PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::default_instance_,
      PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq));
  PB_PersonWrCreateTime_descriptor_ = file->message_type(26);
  static const int PB_PersonWrCreateTime_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PersonWrCreateTime, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PersonWrCreateTime, create_time_),
  };
  PB_PersonWrCreateTime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_PersonWrCreateTime_descriptor_,
      PB_PersonWrCreateTime::default_instance_,
      PB_PersonWrCreateTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PersonWrCreateTime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PersonWrCreateTime, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_PersonWrCreateTime));
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_descriptor_ = file->message_type(27);
  static const int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp, pgps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp, total_person_),
  };
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_descriptor_,
      PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::default_instance_,
      PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp));
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_descriptor_ = PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_descriptor_->nested_type(0);
  static const int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson, pids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson, pid_wr_create_times_),
  };
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_descriptor_,
      PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::default_instance_,
      PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson));
  PB_WRGetManagementPeriodTimeDateReq_descriptor_ = file->message_type(28);
  static const int PB_WRGetManagementPeriodTimeDateReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateReq, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateReq, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateReq, end_date_),
  };
  PB_WRGetManagementPeriodTimeDateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeDateReq_descriptor_,
      PB_WRGetManagementPeriodTimeDateReq::default_instance_,
      PB_WRGetManagementPeriodTimeDateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeDateReq));
  PB_WRGetManagementPeriodTimeDateRsp_descriptor_ = file->message_type(29);
  static const int PB_WRGetManagementPeriodTimeDateRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateRsp, wrdates_),
  };
  PB_WRGetManagementPeriodTimeDateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeDateRsp_descriptor_,
      PB_WRGetManagementPeriodTimeDateRsp::default_instance_,
      PB_WRGetManagementPeriodTimeDateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeDateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeDateRsp));
  PB_WRGetManagementPeriodTimeWorkReportsReq_descriptor_ = file->message_type(30);
  static const int PB_WRGetManagementPeriodTimeWorkReportsReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsReq, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsReq, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsReq, end_date_),
  };
  PB_WRGetManagementPeriodTimeWorkReportsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeWorkReportsReq_descriptor_,
      PB_WRGetManagementPeriodTimeWorkReportsReq::default_instance_,
      PB_WRGetManagementPeriodTimeWorkReportsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeWorkReportsReq));
  PB_WRGetManagementPeriodTimeWorkReportsRsp_descriptor_ = file->message_type(31);
  static const int PB_WRGetManagementPeriodTimeWorkReportsRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsRsp, workreports_),
  };
  PB_WRGetManagementPeriodTimeWorkReportsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetManagementPeriodTimeWorkReportsRsp_descriptor_,
      PB_WRGetManagementPeriodTimeWorkReportsRsp::default_instance_,
      PB_WRGetManagementPeriodTimeWorkReportsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetManagementPeriodTimeWorkReportsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetManagementPeriodTimeWorkReportsRsp));
  PB_FormModel_descriptor_ = file->message_type(32);
  static const int PB_FormModel_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FormModel, doing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FormModel, did_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FormModel, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FormModel, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FormModel, form_model_contents_),
  };
  PB_FormModel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_FormModel_descriptor_,
      PB_FormModel::default_instance_,
      PB_FormModel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FormModel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FormModel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_FormModel));
  PB_WRSetFormModelReq_descriptor_ = file->message_type(33);
  static const int PB_WRSetFormModelReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRSetFormModelReq, form_model_),
  };
  PB_WRSetFormModelReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRSetFormModelReq_descriptor_,
      PB_WRSetFormModelReq::default_instance_,
      PB_WRSetFormModelReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRSetFormModelReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRSetFormModelReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRSetFormModelReq));
  PB_WRSetFormModelRsp_descriptor_ = file->message_type(34);
  static const int PB_WRSetFormModelRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRSetFormModelRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRSetFormModelRsp, version_),
  };
  PB_WRSetFormModelRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRSetFormModelRsp_descriptor_,
      PB_WRSetFormModelRsp::default_instance_,
      PB_WRSetFormModelRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRSetFormModelRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRSetFormModelRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRSetFormModelRsp));
  PB_WRGetFormModelReq_descriptor_ = file->message_type(35);
  static const int PB_WRGetFormModelReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetFormModelReq, form_model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetFormModelReq, flag_),
  };
  PB_WRGetFormModelReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetFormModelReq_descriptor_,
      PB_WRGetFormModelReq::default_instance_,
      PB_WRGetFormModelReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetFormModelReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetFormModelReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetFormModelReq));
  PB_WRGetFormModelRsp_descriptor_ = file->message_type(36);
  static const int PB_WRGetFormModelRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetFormModelRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetFormModelRsp, form_model_),
  };
  PB_WRGetFormModelRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRGetFormModelRsp_descriptor_,
      PB_WRGetFormModelRsp::default_instance_,
      PB_WRGetFormModelRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetFormModelRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRGetFormModelRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRGetFormModelRsp));
  PB_WRFormModelPush_descriptor_ = file->message_type(37);
  static const int PB_WRFormModelPush_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRFormModelPush, form_model_),
  };
  PB_WRFormModelPush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRFormModelPush_descriptor_,
      PB_WRFormModelPush::default_instance_,
      PB_WRFormModelPush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRFormModelPush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRFormModelPush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRFormModelPush));
  PB_WRWebGetWorkReportsReq_descriptor_ = file->message_type(38);
  static const int PB_WRWebGetWorkReportsReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsReq, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsReq, pid_),
  };
  PB_WRWebGetWorkReportsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRWebGetWorkReportsReq_descriptor_,
      PB_WRWebGetWorkReportsReq::default_instance_,
      PB_WRWebGetWorkReportsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRWebGetWorkReportsReq));
  PB_WRWebGetWorkReportsRsp_descriptor_ = file->message_type(39);
  static const int PB_WRWebGetWorkReportsRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsRsp, workreports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsRsp, total_),
  };
  PB_WRWebGetWorkReportsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRWebGetWorkReportsRsp_descriptor_,
      PB_WRWebGetWorkReportsRsp::default_instance_,
      PB_WRWebGetWorkReportsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetWorkReportsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRWebGetWorkReportsRsp));
  PB_WRWebGetManagementWorkReportsNumReq_descriptor_ = file->message_type(40);
  static const int PB_WRWebGetManagementWorkReportsNumReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumReq, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumReq, end_date_),
  };
  PB_WRWebGetManagementWorkReportsNumReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRWebGetManagementWorkReportsNumReq_descriptor_,
      PB_WRWebGetManagementWorkReportsNumReq::default_instance_,
      PB_WRWebGetManagementWorkReportsNumReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRWebGetManagementWorkReportsNumReq));
  PB_WRWebGetManagementWorkReportsNumRsp_descriptor_ = file->message_type(41);
  static const int PB_WRWebGetManagementWorkReportsNumRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp, records_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp, fist_date_),
  };
  PB_WRWebGetManagementWorkReportsNumRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRWebGetManagementWorkReportsNumRsp_descriptor_,
      PB_WRWebGetManagementWorkReportsNumRsp::default_instance_,
      PB_WRWebGetManagementWorkReportsNumRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRWebGetManagementWorkReportsNumRsp));
  PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_descriptor_ = PB_WRWebGetManagementWorkReportsNumRsp_descriptor_->nested_type(0);
  static const int PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp_PB_Record, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp_PB_Record, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp_PB_Record, read_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp_PB_Record, read_time_),
  };
  PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_descriptor_,
      PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::default_instance_,
      PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp_PB_Record, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWebGetManagementWorkReportsNumRsp_PB_Record, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRWebGetManagementWorkReportsNumRsp_PB_Record));
  PB_WRExportWorkReportsReq_descriptor_ = file->message_type(42);
  static const int PB_WRExportWorkReportsReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, gids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, pids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, end_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, skip_),
  };
  PB_WRExportWorkReportsReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRExportWorkReportsReq_descriptor_,
      PB_WRExportWorkReportsReq::default_instance_,
      PB_WRExportWorkReportsReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRExportWorkReportsReq));
  PB_WRExportWorkReportsRsp_descriptor_ = file->message_type(43);
  static const int PB_WRExportWorkReportsRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsRsp, workreports_),
  };
  PB_WRExportWorkReportsRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRExportWorkReportsRsp_descriptor_,
      PB_WRExportWorkReportsRsp::default_instance_,
      PB_WRExportWorkReportsRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRExportWorkReportsRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRExportWorkReportsRsp));
  PB_WRWorkReportCountReq_descriptor_ = file->message_type(44);
  static const int PB_WRWorkReportCountReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountReq, dids_),
  };
  PB_WRWorkReportCountReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRWorkReportCountReq_descriptor_,
      PB_WRWorkReportCountReq::default_instance_,
      PB_WRWorkReportCountReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRWorkReportCountReq));
  PB_WRWorkReportCountRsp_descriptor_ = file->message_type(45);
  static const int PB_WRWorkReportCountRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountRsp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountRsp, did_cnts_),
  };
  PB_WRWorkReportCountRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRWorkReportCountRsp_descriptor_,
      PB_WRWorkReportCountRsp::default_instance_,
      PB_WRWorkReportCountRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRWorkReportCountRsp));
  PB_WRWorkReportCountRsp_PB_WRDidCount_descriptor_ = PB_WRWorkReportCountRsp_descriptor_->nested_type(0);
  static const int PB_WRWorkReportCountRsp_PB_WRDidCount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountRsp_PB_WRDidCount, did_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountRsp_PB_WRDidCount, cnt_),
  };
  PB_WRWorkReportCountRsp_PB_WRDidCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_WRWorkReportCountRsp_PB_WRDidCount_descriptor_,
      PB_WRWorkReportCountRsp_PB_WRDidCount::default_instance_,
      PB_WRWorkReportCountRsp_PB_WRDidCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountRsp_PB_WRDidCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_WRWorkReportCountRsp_PB_WRDidCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_WRWorkReportCountRsp_PB_WRDidCount));
  PB_Type_descriptor_ = file->enum_type(0);
  PB_Status_descriptor_ = file->enum_type(1);
  PB_SubmitType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_workreport_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WorkReport_descriptor_, &PB_WorkReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRReadStatus_descriptor_, &PB_WRReadStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRCreateWorkReportReq_descriptor_, &PB_WRCreateWorkReportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRCreateWorkReportRsp_descriptor_, &PB_WRCreateWorkReportRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetWorkReportReq_descriptor_, &PB_WRGetWorkReportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetWorkReportRsp_descriptor_, &PB_WRGetWorkReportRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetWorkReportsReq_descriptor_, &PB_WRGetWorkReportsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetWorkReportsRsp_descriptor_, &PB_WRGetWorkReportsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementWorkReportsNumReq_descriptor_, &PB_WRGetManagementWorkReportsNumReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementWorkReportsNumRsp_descriptor_, &PB_WRGetManagementWorkReportsNumRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementWorkReportsNumRsp_PB_Record_descriptor_, &PB_WRGetManagementWorkReportsNumRsp_PB_Record::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementWorkReportListReq_descriptor_, &PB_WRGetManagementWorkReportListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementWorkReportListRsp_descriptor_, &PB_WRGetManagementWorkReportListRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsNumReq_descriptor_, &PB_WRGetManagementGroupWorkReportsNumReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsNumRsp_descriptor_, &PB_WRGetManagementGroupWorkReportsNumRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_, &PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRDelWorkReportsReq_descriptor_, &PB_WRDelWorkReportsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRDelWorkReportsRsp_descriptor_, &PB_WRDelWorkReportsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRDelWorkReportsRsp_PB_DelFail_descriptor_, &PB_WRDelWorkReportsRsp_PB_DelFail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRModifyWorkReportReq_descriptor_, &PB_WRModifyWorkReportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRModifyWorkReportRsp_descriptor_, &PB_WRModifyWorkReportRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_PersonStatistics_descriptor_, &PB_PersonStatistics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeStatisticsReq_descriptor_, &PB_WRGetManagementPeriodTimeStatisticsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeStatisticsRsp_descriptor_, &PB_WRGetManagementPeriodTimeStatisticsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_descriptor_, &PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_descriptor_, &PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_, &PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsStatisticsReq_descriptor_, &PB_WRGetManagementGroupWorkReportsStatisticsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsStatisticsRsp_descriptor_, &PB_WRGetManagementGroupWorkReportsStatisticsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_descriptor_, &PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_descriptor_, &PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_PersonWrCreateTime_descriptor_, &PB_PersonWrCreateTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_descriptor_, &PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_descriptor_, &PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeDateReq_descriptor_, &PB_WRGetManagementPeriodTimeDateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeDateRsp_descriptor_, &PB_WRGetManagementPeriodTimeDateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeWorkReportsReq_descriptor_, &PB_WRGetManagementPeriodTimeWorkReportsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetManagementPeriodTimeWorkReportsRsp_descriptor_, &PB_WRGetManagementPeriodTimeWorkReportsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_FormModel_descriptor_, &PB_FormModel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRSetFormModelReq_descriptor_, &PB_WRSetFormModelReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRSetFormModelRsp_descriptor_, &PB_WRSetFormModelRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetFormModelReq_descriptor_, &PB_WRGetFormModelReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRGetFormModelRsp_descriptor_, &PB_WRGetFormModelRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRFormModelPush_descriptor_, &PB_WRFormModelPush::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRWebGetWorkReportsReq_descriptor_, &PB_WRWebGetWorkReportsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRWebGetWorkReportsRsp_descriptor_, &PB_WRWebGetWorkReportsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRWebGetManagementWorkReportsNumReq_descriptor_, &PB_WRWebGetManagementWorkReportsNumReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRWebGetManagementWorkReportsNumRsp_descriptor_, &PB_WRWebGetManagementWorkReportsNumRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_descriptor_, &PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRExportWorkReportsReq_descriptor_, &PB_WRExportWorkReportsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRExportWorkReportsRsp_descriptor_, &PB_WRExportWorkReportsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRWorkReportCountReq_descriptor_, &PB_WRWorkReportCountReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRWorkReportCountRsp_descriptor_, &PB_WRWorkReportCountRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_WRWorkReportCountRsp_PB_WRDidCount_descriptor_, &PB_WRWorkReportCountRsp_PB_WRDidCount::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_workreport_2eproto() {
  delete PB_WorkReport::default_instance_;
  delete PB_WorkReport_reflection_;
  delete PB_WRReadStatus::default_instance_;
  delete PB_WRReadStatus_reflection_;
  delete PB_WRCreateWorkReportReq::default_instance_;
  delete PB_WRCreateWorkReportReq_reflection_;
  delete PB_WRCreateWorkReportRsp::default_instance_;
  delete PB_WRCreateWorkReportRsp_reflection_;
  delete PB_WRGetWorkReportReq::default_instance_;
  delete PB_WRGetWorkReportReq_reflection_;
  delete PB_WRGetWorkReportRsp::default_instance_;
  delete PB_WRGetWorkReportRsp_reflection_;
  delete PB_WRGetWorkReportsReq::default_instance_;
  delete PB_WRGetWorkReportsReq_reflection_;
  delete PB_WRGetWorkReportsRsp::default_instance_;
  delete PB_WRGetWorkReportsRsp_reflection_;
  delete PB_WRGetManagementWorkReportsNumReq::default_instance_;
  delete PB_WRGetManagementWorkReportsNumReq_reflection_;
  delete PB_WRGetManagementWorkReportsNumRsp::default_instance_;
  delete PB_WRGetManagementWorkReportsNumRsp_reflection_;
  delete PB_WRGetManagementWorkReportsNumRsp_PB_Record::default_instance_;
  delete PB_WRGetManagementWorkReportsNumRsp_PB_Record_reflection_;
  delete PB_WRGetManagementWorkReportListReq::default_instance_;
  delete PB_WRGetManagementWorkReportListReq_reflection_;
  delete PB_WRGetManagementWorkReportListRsp::default_instance_;
  delete PB_WRGetManagementWorkReportListRsp_reflection_;
  delete PB_WRGetManagementGroupWorkReportsNumReq::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsNumReq_reflection_;
  delete PB_WRGetManagementGroupWorkReportsNumRsp::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsNumRsp_reflection_;
  delete PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_reflection_;
  delete PB_WRDelWorkReportsReq::default_instance_;
  delete PB_WRDelWorkReportsReq_reflection_;
  delete PB_WRDelWorkReportsRsp::default_instance_;
  delete PB_WRDelWorkReportsRsp_reflection_;
  delete PB_WRDelWorkReportsRsp_PB_DelFail::default_instance_;
  delete PB_WRDelWorkReportsRsp_PB_DelFail_reflection_;
  delete PB_WRModifyWorkReportReq::default_instance_;
  delete PB_WRModifyWorkReportReq_reflection_;
  delete PB_WRModifyWorkReportRsp::default_instance_;
  delete PB_WRModifyWorkReportRsp_reflection_;
  delete PB_PersonStatistics::default_instance_;
  delete PB_PersonStatistics_reflection_;
  delete PB_WRGetManagementPeriodTimeStatisticsReq::default_instance_;
  delete PB_WRGetManagementPeriodTimeStatisticsReq_reflection_;
  delete PB_WRGetManagementPeriodTimeStatisticsRsp::default_instance_;
  delete PB_WRGetManagementPeriodTimeStatisticsRsp_reflection_;
  delete PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::default_instance_;
  delete PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_reflection_;
  delete PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::default_instance_;
  delete PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_reflection_;
  delete PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_;
  delete PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_reflection_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsReq::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsReq_reflection_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsRsp::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsRsp_reflection_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_reflection_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_reflection_;
  delete PB_PersonWrCreateTime::default_instance_;
  delete PB_PersonWrCreateTime_reflection_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_reflection_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::default_instance_;
  delete PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_reflection_;
  delete PB_WRGetManagementPeriodTimeDateReq::default_instance_;
  delete PB_WRGetManagementPeriodTimeDateReq_reflection_;
  delete PB_WRGetManagementPeriodTimeDateRsp::default_instance_;
  delete PB_WRGetManagementPeriodTimeDateRsp_reflection_;
  delete PB_WRGetManagementPeriodTimeWorkReportsReq::default_instance_;
  delete PB_WRGetManagementPeriodTimeWorkReportsReq_reflection_;
  delete PB_WRGetManagementPeriodTimeWorkReportsRsp::default_instance_;
  delete PB_WRGetManagementPeriodTimeWorkReportsRsp_reflection_;
  delete PB_FormModel::default_instance_;
  delete PB_FormModel_reflection_;
  delete PB_WRSetFormModelReq::default_instance_;
  delete PB_WRSetFormModelReq_reflection_;
  delete PB_WRSetFormModelRsp::default_instance_;
  delete PB_WRSetFormModelRsp_reflection_;
  delete PB_WRGetFormModelReq::default_instance_;
  delete PB_WRGetFormModelReq_reflection_;
  delete PB_WRGetFormModelRsp::default_instance_;
  delete PB_WRGetFormModelRsp_reflection_;
  delete PB_WRFormModelPush::default_instance_;
  delete PB_WRFormModelPush_reflection_;
  delete PB_WRWebGetWorkReportsReq::default_instance_;
  delete PB_WRWebGetWorkReportsReq_reflection_;
  delete PB_WRWebGetWorkReportsRsp::default_instance_;
  delete PB_WRWebGetWorkReportsRsp_reflection_;
  delete PB_WRWebGetManagementWorkReportsNumReq::default_instance_;
  delete PB_WRWebGetManagementWorkReportsNumReq_reflection_;
  delete PB_WRWebGetManagementWorkReportsNumRsp::default_instance_;
  delete PB_WRWebGetManagementWorkReportsNumRsp_reflection_;
  delete PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::default_instance_;
  delete PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_reflection_;
  delete PB_WRExportWorkReportsReq::default_instance_;
  delete PB_WRExportWorkReportsReq_reflection_;
  delete PB_WRExportWorkReportsRsp::default_instance_;
  delete PB_WRExportWorkReportsRsp_reflection_;
  delete PB_WRWorkReportCountReq::default_instance_;
  delete PB_WRWorkReportCountReq_reflection_;
  delete PB_WRWorkReportCountRsp::default_instance_;
  delete PB_WRWorkReportCountRsp_reflection_;
  delete PB_WRWorkReportCountRsp_PB_WRDidCount::default_instance_;
  delete PB_WRWorkReportCountRsp_PB_WRDidCount_reflection_;
}

void protobuf_AddDesc_workreport_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::sangfor::moa::protobuf::protobuf_AddDesc_attachment_2eproto();
  ::com::sangfor::moa::protobuf::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020workreport.proto\022\030com.sangfor.moa.prot"
    "obuf\032\020attachment.proto\032\014common.proto\"\260\002\n"
    "\rPB_WorkReport\022\026\n\016work_report_id\030\001 \001(\003\022\017"
    "\n\007content\030\002 \001(\t\0226\n\005attrs\030\003 \003(\0132\'.com.san"
    "gfor.moa.protobuf.PB_Attachment\022\014\n\004type\030"
    "\004 \001(\005\022\016\n\006wrdate\030\005 \001(\003\022\017\n\007version\030\006 \001(\005\0220"
    "\n\005forms\030\007 \003(\0132!.com.sangfor.moa.protobuf"
    ".PB_Form\022\022\n\ncreate_pid\030\024 \001(\003\022\013\n\003gid\030\025 \001("
    "\003\022\023\n\013create_time\030\026 \001(\003\022\022\n\nmodify_pid\030\027 \001"
    "(\003\022\023\n\013modify_time\030\030 \001(\003\"q\n\017PB_WRReadStat"
    "us\022\013\n\003did\030\001 \001(\003\022\013\n\003pid\030\002 \001(\003\022\014\n\004type\030\003 \001"
    "(\005\022\016\n\006wrdate\030\004 \001(\003\022\023\n\013read_status\030\005 \001(\005\022"
    "\021\n\tread_time\030\006 \001(\003\"W\n\030PB_WRCreateWorkRep"
    "ortReq\022;\n\nworkreport\030\001 \001(\0132\'.com.sangfor"
    ".moa.protobuf.PB_WorkReport\"V\n\030PB_WRCrea"
    "teWorkReportRsp\022\021\n\006result\030\001 \001(\005:\0010\022\026\n\016wo"
    "rk_report_id\030\002 \001(\003\022\017\n\007version\030\003 \001(\005\"/\n\025P"
    "B_WRGetWorkReportReq\022\026\n\016work_report_id\030\001"
    " \001(\003\"g\n\025PB_WRGetWorkReportRsp\022\021\n\006result\030"
    "\001 \001(\005:\0010\022;\n\nworkreport\030\002 \001(\0132\'.com.sangf"
    "or.moa.protobuf.PB_WorkReport\"v\n\026PB_WRGe"
    "tWorkReportsReq\022\021\n\005count\030\001 \001(\003:\00210\022\020\n\010st"
    "art_id\030\002 \001(\003\0227\n\006locals\030\003 \003(\0132\'.com.sangf"
    "or.moa.protobuf.PB_WorkReport\"w\n\026PB_WRGe"
    "tWorkReportsRsp\022\021\n\006result\030\001 \001(\005:\0010\022<\n\013wo"
    "rkreports\030\002 \003(\0132\'.com.sangfor.moa.protob"
    "uf.PB_WorkReport\022\014\n\004dels\030\003 \003(\003\"V\n#PB_WRG"
    "etManagementWorkReportsNumReq\022\014\n\004type\030\001 "
    "\001(\005\022\r\n\005count\030\002 \001(\003\022\022\n\nstart_date\030\003 \001(\003\"\344"
    "\001\n#PB_WRGetManagementWorkReportsNumRsp\022\021"
    "\n\006result\030\001 \001(\005:\0010\022X\n\007records\030\002 \003(\0132G.com"
    ".sangfor.moa.protobuf.PB_WRGetManagement"
    "WorkReportsNumRsp.PB_Record\032P\n\tPB_Record"
    "\022\014\n\004date\030\001 \001(\003\022\r\n\005count\030\002 \001(\003\022\023\n\013read_st"
    "atus\030\003 \001(\005\022\021\n\tread_time\030\004 \001(\003\"\204\001\n#PB_WRG"
    "etManagementWorkReportListReq\022\014\n\004type\030\001 "
    "\001(\005\022\016\n\006wrdate\030\002 \001(\003\022\021\n\005count\030\003 \001(\005:\00215\022\020"
    "\n\010start_id\030\004 \001(\003\022\014\n\004gids\030\005 \003(\003\022\014\n\004skip\030\006"
    " \001(\005\"\221\001\n#PB_WRGetManagementWorkReportLis"
    "tRsp\022\021\n\006result\030\001 \001(\005:\0010\022<\n\013workreports\030\002"
    " \003(\0132\'.com.sangfor.moa.protobuf.PB_WorkR"
    "eport\022\031\n\021total_workreports\030\003 \001(\005\"H\n(PB_W"
    "RGetManagementGroupWorkReportsNumReq\022\014\n\004"
    "type\030\001 \001(\005\022\016\n\006wrdate\030\002 \001(\003\"\323\001\n(PB_WRGetM"
    "anagementGroupWorkReportsNumRsp\022\021\n\006resul"
    "t\030\001 \001(\005:\0010\022f\n\013group_stats\030\002 \003(\0132Q.com.sa"
    "ngfor.moa.protobuf.PB_WRGetManagementGro"
    "upWorkReportsNumRsp.PB_GroupStatic\032,\n\016PB"
    "_GroupStatic\022\013\n\003gid\030\001 \001(\003\022\r\n\005count\030\002 \001(\003"
    "\"1\n\026PB_WRDelWorkReportsReq\022\027\n\017work_repor"
    "t_ids\030\001 \003(\003\"\255\001\n\026PB_WRDelWorkReportsRsp\022\021"
    "\n\006result\030\001 \001(\005:\0010\022J\n\005fails\030\002 \003(\0132;.com.s"
    "angfor.moa.protobuf.PB_WRDelWorkReportsR"
    "sp.PB_DelFail\0324\n\nPB_DelFail\022\016\n\006result\030\002 "
    "\001(\005\022\026\n\016work_report_id\030\001 \001(\003\"W\n\030PB_WRModi"
    "fyWorkReportReq\022;\n\nworkreport\030\001 \001(\0132\'.co"
    "m.sangfor.moa.protobuf.PB_WorkReport\">\n\030"
    "PB_WRModifyWorkReportRsp\022\021\n\006result\030\001 \001(\005"
    ":\0010\022\017\n\007version\030\002 \001(\005\"3\n\023PB_PersonStatist"
    "ics\022\013\n\003pid\030\001 \001(\003\022\017\n\007wrdates\030\002 \003(\003\"\273\001\n)PB"
    "_WRGetManagementPeriodTimeStatisticsReq\022"
    "\014\n\004type\030\001 \001(\005\022\022\n\nstart_date\030\002 \001(\003\022\020\n\010end"
    "_date\030\003 \001(\003\022\r\n\005count\030\004 \001(\003\022\014\n\004gids\030\005 \003(\003"
    "\022=\n\006locals\030\006 \003(\0132-.com.sangfor.moa.proto"
    "buf.PB_PersonStatistics\"\273\001\n)PB_WRGetMana"
    "gementPeriodTimeStatisticsRsp\022\021\n\006result\030"
    "\001 \001(\005:\0010\022\031\n\021total_workreports\030\002 \001(\003\022\024\n\014t"
    "otal_person\030\003 \001(\003\022J\n\023person_statisticses"
    "\030\004 \003(\0132-.com.sangfor.moa.protobuf.PB_Per"
    "sonStatistics\"h\n2PB_WRGetManagementPerio"
    "dTimeGroupWorkReportsNumReq\022\014\n\004type\030\001 \001("
    "\005\022\022\n\nstart_date\030\002 \001(\003\022\020\n\010end_date\030\003 \001(\003\""
    "\347\001\n2PB_WRGetManagementPeriodTimeGroupWor"
    "kReportsNumRsp\022\021\n\006result\030\001 \001(\005:\0010\022p\n\013gro"
    "up_stats\030\002 \003(\0132[.com.sangfor.moa.protobu"
    "f.PB_WRGetManagementPeriodTimeGroupWorkR"
    "eportsNumRsp.PB_GroupStatic\032,\n\016PB_GroupS"
    "tatic\022\013\n\003gid\030\001 \001(\003\022\r\n\005count\030\002 \001(\003\"O\n/PB_"
    "WRGetManagementGroupWorkReportsStatistic"
    "sReq\022\014\n\004type\030\001 \001(\005\022\016\n\006wrdate\030\002 \001(\003\"\251\002\n/P"
    "B_WRGetManagementGroupWorkReportsStatist"
    "icsRsp\022\021\n\006result\030\001 \001(\005:\0010\022v\n\020group_stati"
    "stics\030\002 \003(\0132\\.com.sangfor.moa.protobuf.P"
    "B_WRGetManagementGroupWorkReportsStatist"
    "icsRsp.PB_GroupStatistics\032k\n\022PB_GroupSta"
    "tistics\022\013\n\003gid\030\001 \001(\003\022\033\n\023submit_person_co"
    "unt\030\002 \001(\003\022\035\n\025unsubmit_person_count\030\003 \001(\003"
    "\022\014\n\004pids\030\004 \003(\003\"\267\001\n5PB_WRGetManagementGro"
    "upWorkReportsStatisticsDetailReq\022\014\n\004type"
    "\030\001 \001(\005\022\016\n\006wrdate\030\002 \001(\003\022\023\n\013submit_type\030\003 "
    "\001(\005\022\014\n\004gids\030\004 \003(\003\022\r\n\005count\030\005 \001(\003\022\022\n\nloca"
    "l_pids\030\006 \003(\003\022\014\n\004skip\030\007 \001(\003\022\014\n\004pids\030\010 \003(\003"
    "\"9\n\025PB_PersonWrCreateTime\022\013\n\003pid\030\001 \001(\003\022\023"
    "\n\013create_time\030\002 \003(\003\"\311\002\n5PB_WRGetManageme"
    "ntGroupWorkReportsStatisticsDetailRsp\022\021\n"
    "\006result\030\001 \001(\005:\0010\022l\n\004pgps\030\002 \003(\0132^.com.san"
    "gfor.moa.protobuf.PB_WRGetManagementGrou"
    "pWorkReportsStatisticsDetailRsp.PB_Group"
    "Person\022\024\n\014total_person\030\003 \001(\003\032y\n\016PB_Group"
    "Person\022\013\n\003gid\030\001 \001(\003\022\014\n\004pids\030\002 \003(\003\022L\n\023pid"
    "_wr_create_times\030\003 \003(\0132/.com.sangfor.moa"
    ".protobuf.PB_PersonWrCreateTime\"f\n#PB_WR"
    "GetManagementPeriodTimeDateReq\022\013\n\003pid\030\001 "
    "\001(\003\022\014\n\004type\030\002 \001(\005\022\022\n\nstart_date\030\003 \001(\003\022\020\n"
    "\010end_date\030\004 \001(\003\"I\n#PB_WRGetManagementPer"
    "iodTimeDateRsp\022\021\n\006result\030\001 \001(\005:\0010\022\017\n\007wrd"
    "ates\030\002 \003(\003\"m\n*PB_WRGetManagementPeriodTi"
    "meWorkReportsReq\022\013\n\003pid\030\001 \001(\003\022\014\n\004type\030\002 "
    "\001(\005\022\022\n\nstart_date\030\003 \001(\003\022\020\n\010end_date\030\004 \001("
    "\003\"}\n*PB_WRGetManagementPeriodTimeWorkRep"
    "ortsRsp\022\021\n\006result\030\001 \001(\005:\0010\022<\n\013workreport"
    "s\030\002 \003(\0132\'.com.sangfor.moa.protobuf.PB_Wo"
    "rkReport\"f\n\014PB_FormModel\022\r\n\005doing\030\001 \001(\003\022"
    "\013\n\003did\030\002 \001(\003\022\014\n\004type\030\003 \001(\005\022\017\n\007version\030\004 "
    "\001(\005\022\033\n\023form_model_contents\030\005 \003(\t\"R\n\024PB_W"
    "RSetFormModelReq\022:\n\nform_model\030\001 \001(\0132&.c"
    "om.sangfor.moa.protobuf.PB_FormModel\":\n\024"
    "PB_WRSetFormModelRsp\022\021\n\006result\030\001 \001(\005:\0010\022"
    "\017\n\007version\030\002 \001(\005\"`\n\024PB_WRGetFormModelReq"
    "\022:\n\nform_model\030\001 \003(\0132&.com.sangfor.moa.p"
    "rotobuf.PB_FormModel\022\014\n\004flag\030\002 \001(\005\"e\n\024PB"
    "_WRGetFormModelRsp\022\021\n\006result\030\001 \001(\005:\0010\022:\n"
    "\nform_model\030\002 \003(\0132&.com.sangfor.moa.prot"
    "obuf.PB_FormModel\"P\n\022PB_WRFormModelPush\022"
    ":\n\nform_model\030\002 \001(\0132&.com.sangfor.moa.pr"
    "otobuf.PB_FormModel\"J\n\031PB_WRWebGetWorkRe"
    "portsReq\022\021\n\005count\030\001 \001(\003:\00210\022\r\n\005start\030\002 \001"
    "(\003\022\013\n\003pid\030\003 \001(\003\"{\n\031PB_WRWebGetWorkReport"
    "sRsp\022\021\n\006result\030\001 \001(\005:\0010\022<\n\013workreports\030\002"
    " \003(\0132\'.com.sangfor.moa.protobuf.PB_WorkR"
    "eport\022\r\n\005total\030\003 \001(\003\"\\\n&PB_WRWebGetManag"
    "ementWorkReportsNumReq\022\014\n\004type\030\001 \001(\005\022\022\n\n"
    "start_date\030\002 \001(\003\022\020\n\010end_date\030\003 \001(\003\"\375\001\n&P"
    "B_WRWebGetManagementWorkReportsNumRsp\022\021\n"
    "\006result\030\001 \001(\005:\0010\022[\n\007records\030\002 \003(\0132J.com."
    "sangfor.moa.protobuf.PB_WRWebGetManageme"
    "ntWorkReportsNumRsp.PB_Record\022\021\n\tfist_da"
    "te\030\003 \001(\003\032P\n\tPB_Record\022\014\n\004date\030\001 \001(\003\022\r\n\005c"
    "ount\030\002 \001(\003\022\023\n\013read_status\030\003 \001(\005\022\021\n\tread_"
    "time\030\004 \001(\003\"\211\001\n\031PB_WRExportWorkReportsReq"
    "\022\r\n\005types\030\001 \003(\005\022\014\n\004gids\030\002 \003(\003\022\014\n\004pids\030\003 "
    "\003(\003\022\022\n\nstart_date\030\004 \001(\003\022\020\n\010end_date\030\005 \001("
    "\003\022\r\n\005limit\030\006 \001(\003\022\014\n\004skip\030\007 \001(\003\"l\n\031PB_WRE"
    "xportWorkReportsRsp\022\021\n\006result\030\001 \001(\005:\0010\022<"
    "\n\013workreports\030\002 \003(\0132\'.com.sangfor.moa.pr"
    "otobuf.PB_WorkReport\"\'\n\027PB_WRWorkReportC"
    "ountReq\022\014\n\004dids\030\001 \003(\003\"\252\001\n\027PB_WRWorkRepor"
    "tCountRsp\022\021\n\006result\030\001 \001(\005:\0010\022Q\n\010did_cnts"
    "\030\002 \003(\0132?.com.sangfor.moa.protobuf.PB_WRW"
    "orkReportCountRsp.PB_WRDidCount\032)\n\rPB_WR"
    "DidCount\022\013\n\003did\030\001 \001(\003\022\013\n\003cnt\030\002 \001(\003*-\n\007PB"
    "_Type\022\t\n\005DAILY\020\000\022\n\n\006WEEKLY\020\001\022\013\n\007MONTHLY\020"
    "\002*,\n\tPB_Status\022\n\n\006UNREAD\020\000\022\010\n\004READ\020\001\022\t\n\005"
    "ADDED\020\002*)\n\rPB_SubmitType\022\n\n\006SUBMIT\020\000\022\014\n\010"
    "UNSUBMIT\020\001", 6170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "workreport.proto", &protobuf_RegisterTypes);
  PB_WorkReport::default_instance_ = new PB_WorkReport();
  PB_WRReadStatus::default_instance_ = new PB_WRReadStatus();
  PB_WRCreateWorkReportReq::default_instance_ = new PB_WRCreateWorkReportReq();
  PB_WRCreateWorkReportRsp::default_instance_ = new PB_WRCreateWorkReportRsp();
  PB_WRGetWorkReportReq::default_instance_ = new PB_WRGetWorkReportReq();
  PB_WRGetWorkReportRsp::default_instance_ = new PB_WRGetWorkReportRsp();
  PB_WRGetWorkReportsReq::default_instance_ = new PB_WRGetWorkReportsReq();
  PB_WRGetWorkReportsRsp::default_instance_ = new PB_WRGetWorkReportsRsp();
  PB_WRGetManagementWorkReportsNumReq::default_instance_ = new PB_WRGetManagementWorkReportsNumReq();
  PB_WRGetManagementWorkReportsNumRsp::default_instance_ = new PB_WRGetManagementWorkReportsNumRsp();
  PB_WRGetManagementWorkReportsNumRsp_PB_Record::default_instance_ = new PB_WRGetManagementWorkReportsNumRsp_PB_Record();
  PB_WRGetManagementWorkReportListReq::default_instance_ = new PB_WRGetManagementWorkReportListReq();
  PB_WRGetManagementWorkReportListRsp::default_instance_ = new PB_WRGetManagementWorkReportListRsp();
  PB_WRGetManagementGroupWorkReportsNumReq::default_instance_ = new PB_WRGetManagementGroupWorkReportsNumReq();
  PB_WRGetManagementGroupWorkReportsNumRsp::default_instance_ = new PB_WRGetManagementGroupWorkReportsNumRsp();
  PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_ = new PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic();
  PB_WRDelWorkReportsReq::default_instance_ = new PB_WRDelWorkReportsReq();
  PB_WRDelWorkReportsRsp::default_instance_ = new PB_WRDelWorkReportsRsp();
  PB_WRDelWorkReportsRsp_PB_DelFail::default_instance_ = new PB_WRDelWorkReportsRsp_PB_DelFail();
  PB_WRModifyWorkReportReq::default_instance_ = new PB_WRModifyWorkReportReq();
  PB_WRModifyWorkReportRsp::default_instance_ = new PB_WRModifyWorkReportRsp();
  PB_PersonStatistics::default_instance_ = new PB_PersonStatistics();
  PB_WRGetManagementPeriodTimeStatisticsReq::default_instance_ = new PB_WRGetManagementPeriodTimeStatisticsReq();
  PB_WRGetManagementPeriodTimeStatisticsRsp::default_instance_ = new PB_WRGetManagementPeriodTimeStatisticsRsp();
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::default_instance_ = new PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq();
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::default_instance_ = new PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp();
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_ = new PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic();
  PB_WRGetManagementGroupWorkReportsStatisticsReq::default_instance_ = new PB_WRGetManagementGroupWorkReportsStatisticsReq();
  PB_WRGetManagementGroupWorkReportsStatisticsRsp::default_instance_ = new PB_WRGetManagementGroupWorkReportsStatisticsRsp();
  PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::default_instance_ = new PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics();
  PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::default_instance_ = new PB_WRGetManagementGroupWorkReportsStatisticsDetailReq();
  PB_PersonWrCreateTime::default_instance_ = new PB_PersonWrCreateTime();
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::default_instance_ = new PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp();
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::default_instance_ = new PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson();
  PB_WRGetManagementPeriodTimeDateReq::default_instance_ = new PB_WRGetManagementPeriodTimeDateReq();
  PB_WRGetManagementPeriodTimeDateRsp::default_instance_ = new PB_WRGetManagementPeriodTimeDateRsp();
  PB_WRGetManagementPeriodTimeWorkReportsReq::default_instance_ = new PB_WRGetManagementPeriodTimeWorkReportsReq();
  PB_WRGetManagementPeriodTimeWorkReportsRsp::default_instance_ = new PB_WRGetManagementPeriodTimeWorkReportsRsp();
  PB_FormModel::default_instance_ = new PB_FormModel();
  PB_WRSetFormModelReq::default_instance_ = new PB_WRSetFormModelReq();
  PB_WRSetFormModelRsp::default_instance_ = new PB_WRSetFormModelRsp();
  PB_WRGetFormModelReq::default_instance_ = new PB_WRGetFormModelReq();
  PB_WRGetFormModelRsp::default_instance_ = new PB_WRGetFormModelRsp();
  PB_WRFormModelPush::default_instance_ = new PB_WRFormModelPush();
  PB_WRWebGetWorkReportsReq::default_instance_ = new PB_WRWebGetWorkReportsReq();
  PB_WRWebGetWorkReportsRsp::default_instance_ = new PB_WRWebGetWorkReportsRsp();
  PB_WRWebGetManagementWorkReportsNumReq::default_instance_ = new PB_WRWebGetManagementWorkReportsNumReq();
  PB_WRWebGetManagementWorkReportsNumRsp::default_instance_ = new PB_WRWebGetManagementWorkReportsNumRsp();
  PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::default_instance_ = new PB_WRWebGetManagementWorkReportsNumRsp_PB_Record();
  PB_WRExportWorkReportsReq::default_instance_ = new PB_WRExportWorkReportsReq();
  PB_WRExportWorkReportsRsp::default_instance_ = new PB_WRExportWorkReportsRsp();
  PB_WRWorkReportCountReq::default_instance_ = new PB_WRWorkReportCountReq();
  PB_WRWorkReportCountRsp::default_instance_ = new PB_WRWorkReportCountRsp();
  PB_WRWorkReportCountRsp_PB_WRDidCount::default_instance_ = new PB_WRWorkReportCountRsp_PB_WRDidCount();
  PB_WorkReport::default_instance_->InitAsDefaultInstance();
  PB_WRReadStatus::default_instance_->InitAsDefaultInstance();
  PB_WRCreateWorkReportReq::default_instance_->InitAsDefaultInstance();
  PB_WRCreateWorkReportRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetWorkReportReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetWorkReportRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetWorkReportsReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetWorkReportsRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementWorkReportsNumReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementWorkReportsNumRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementWorkReportsNumRsp_PB_Record::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementWorkReportListReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementWorkReportListRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsNumReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsNumRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_->InitAsDefaultInstance();
  PB_WRDelWorkReportsReq::default_instance_->InitAsDefaultInstance();
  PB_WRDelWorkReportsRsp::default_instance_->InitAsDefaultInstance();
  PB_WRDelWorkReportsRsp_PB_DelFail::default_instance_->InitAsDefaultInstance();
  PB_WRModifyWorkReportReq::default_instance_->InitAsDefaultInstance();
  PB_WRModifyWorkReportRsp::default_instance_->InitAsDefaultInstance();
  PB_PersonStatistics::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeStatisticsReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeStatisticsRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsStatisticsReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsStatisticsRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::default_instance_->InitAsDefaultInstance();
  PB_PersonWrCreateTime::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeDateReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeDateRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeWorkReportsReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetManagementPeriodTimeWorkReportsRsp::default_instance_->InitAsDefaultInstance();
  PB_FormModel::default_instance_->InitAsDefaultInstance();
  PB_WRSetFormModelReq::default_instance_->InitAsDefaultInstance();
  PB_WRSetFormModelRsp::default_instance_->InitAsDefaultInstance();
  PB_WRGetFormModelReq::default_instance_->InitAsDefaultInstance();
  PB_WRGetFormModelRsp::default_instance_->InitAsDefaultInstance();
  PB_WRFormModelPush::default_instance_->InitAsDefaultInstance();
  PB_WRWebGetWorkReportsReq::default_instance_->InitAsDefaultInstance();
  PB_WRWebGetWorkReportsRsp::default_instance_->InitAsDefaultInstance();
  PB_WRWebGetManagementWorkReportsNumReq::default_instance_->InitAsDefaultInstance();
  PB_WRWebGetManagementWorkReportsNumRsp::default_instance_->InitAsDefaultInstance();
  PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::default_instance_->InitAsDefaultInstance();
  PB_WRExportWorkReportsReq::default_instance_->InitAsDefaultInstance();
  PB_WRExportWorkReportsRsp::default_instance_->InitAsDefaultInstance();
  PB_WRWorkReportCountReq::default_instance_->InitAsDefaultInstance();
  PB_WRWorkReportCountRsp::default_instance_->InitAsDefaultInstance();
  PB_WRWorkReportCountRsp_PB_WRDidCount::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_workreport_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_workreport_2eproto {
  StaticDescriptorInitializer_workreport_2eproto() {
    protobuf_AddDesc_workreport_2eproto();
  }
} static_descriptor_initializer_workreport_2eproto_;

const ::google::protobuf::EnumDescriptor* PB_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_Type_descriptor_;
}
bool PB_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_Status_descriptor_;
}
bool PB_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_SubmitType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_SubmitType_descriptor_;
}
bool PB_SubmitType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::std::string PB_WorkReport::_default_content_;
#ifndef _MSC_VER
const int PB_WorkReport::kWorkReportIdFieldNumber;
const int PB_WorkReport::kContentFieldNumber;
const int PB_WorkReport::kAttrsFieldNumber;
const int PB_WorkReport::kTypeFieldNumber;
const int PB_WorkReport::kWrdateFieldNumber;
const int PB_WorkReport::kVersionFieldNumber;
const int PB_WorkReport::kFormsFieldNumber;
const int PB_WorkReport::kCreatePidFieldNumber;
const int PB_WorkReport::kGidFieldNumber;
const int PB_WorkReport::kCreateTimeFieldNumber;
const int PB_WorkReport::kModifyPidFieldNumber;
const int PB_WorkReport::kModifyTimeFieldNumber;
#endif  // !_MSC_VER

PB_WorkReport::PB_WorkReport() {
  SharedCtor();
}

void PB_WorkReport::InitAsDefaultInstance() {
}

PB_WorkReport::PB_WorkReport(const PB_WorkReport& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WorkReport::SharedCtor() {
  _cached_size_ = 0;
  work_report_id_ = GOOGLE_LONGLONG(0);
  content_ = const_cast< ::std::string*>(&_default_content_);
  type_ = 0;
  wrdate_ = GOOGLE_LONGLONG(0);
  version_ = 0;
  create_pid_ = GOOGLE_LONGLONG(0);
  gid_ = GOOGLE_LONGLONG(0);
  create_time_ = GOOGLE_LONGLONG(0);
  modify_pid_ = GOOGLE_LONGLONG(0);
  modify_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WorkReport::~PB_WorkReport() {
  SharedDtor();
}

void PB_WorkReport::SharedDtor() {
  if (content_ != &_default_content_) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WorkReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WorkReport_descriptor_;
}

const PB_WorkReport& PB_WorkReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WorkReport* PB_WorkReport::default_instance_ = NULL;

PB_WorkReport* PB_WorkReport::New() const {
  return new PB_WorkReport;
}

void PB_WorkReport::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    work_report_id_ = GOOGLE_LONGLONG(0);
    if (_has_bit(1)) {
      if (content_ != &_default_content_) {
        content_->clear();
      }
    }
    type_ = 0;
    wrdate_ = GOOGLE_LONGLONG(0);
    version_ = 0;
    create_pid_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    gid_ = GOOGLE_LONGLONG(0);
    create_time_ = GOOGLE_LONGLONG(0);
    modify_pid_ = GOOGLE_LONGLONG(0);
    modify_time_ = GOOGLE_LONGLONG(0);
  }
  attrs_.Clear();
  forms_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WorkReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 work_report_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &work_report_id_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }
      
      // optional string content = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_content:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_content()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->content().data(), this->content().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_attrs;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_Attachment attrs = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_attrs:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_attrs()));
        if (input->ExpectTag(26)) goto parse_attrs;
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }
      
      // optional int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_wrdate;
        break;
      }
      
      // optional int64 wrdate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wrdate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &wrdate_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_version;
        break;
      }
      
      // optional int32 version = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_version:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &version_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_forms;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_Form forms = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_forms:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_forms()));
        if (input->ExpectTag(58)) goto parse_forms;
        if (input->ExpectTag(160)) goto parse_create_pid;
        break;
      }
      
      // optional int64 create_pid = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_create_pid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &create_pid_));
        _set_bit(7);
        if (input->ExpectTag(168)) goto parse_gid;
        break;
      }
      
      // optional int64 gid = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_gid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &gid_));
        _set_bit(8);
        if (input->ExpectTag(176)) goto parse_create_time;
        break;
      }
      
      // optional int64 create_time = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_create_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &create_time_));
        _set_bit(9);
        if (input->ExpectTag(184)) goto parse_modify_pid;
        break;
      }
      
      // optional int64 modify_pid = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_modify_pid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &modify_pid_));
        _set_bit(10);
        if (input->ExpectTag(192)) goto parse_modify_time;
        break;
      }
      
      // optional int64 modify_time = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_modify_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &modify_time_));
        _set_bit(11);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WorkReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WorkReport::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 work_report_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->work_report_id(), output);
  }
  
  // optional string content = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->content(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_Attachment attrs = 3;
  for (int i = 0; i < this->attrs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->attrs(i), output);
  }
  
  // optional int32 type = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }
  
  // optional int64 wrdate = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->wrdate(), output);
  }
  
  // optional int32 version = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->version(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_Form forms = 7;
  for (int i = 0; i < this->forms_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->forms(i), output);
  }
  
  // optional int64 create_pid = 20;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->create_pid(), output);
  }
  
  // optional int64 gid = 21;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->gid(), output);
  }
  
  // optional int64 create_time = 22;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->create_time(), output);
  }
  
  // optional int64 modify_pid = 23;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->modify_pid(), output);
  }
  
  // optional int64 modify_time = 24;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->modify_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WorkReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 work_report_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->work_report_id(), target);
  }
  
  // optional string content = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_Attachment attrs = 3;
  for (int i = 0; i < this->attrs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attrs(i), target);
  }
  
  // optional int32 type = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }
  
  // optional int64 wrdate = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->wrdate(), target);
  }
  
  // optional int32 version = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->version(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_Form forms = 7;
  for (int i = 0; i < this->forms_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->forms(i), target);
  }
  
  // optional int64 create_pid = 20;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->create_pid(), target);
  }
  
  // optional int64 gid = 21;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->gid(), target);
  }
  
  // optional int64 create_time = 22;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->create_time(), target);
  }
  
  // optional int64 modify_pid = 23;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->modify_pid(), target);
  }
  
  // optional int64 modify_time = 24;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->modify_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WorkReport::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 work_report_id = 1;
    if (has_work_report_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->work_report_id());
    }
    
    // optional string content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 wrdate = 5;
    if (has_wrdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wrdate());
    }
    
    // optional int32 version = 6;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }
    
    // optional int64 create_pid = 20;
    if (has_create_pid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->create_pid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 gid = 21;
    if (has_gid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gid());
    }
    
    // optional int64 create_time = 22;
    if (has_create_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->create_time());
    }
    
    // optional int64 modify_pid = 23;
    if (has_modify_pid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->modify_pid());
    }
    
    // optional int64 modify_time = 24;
    if (has_modify_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->modify_time());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_Attachment attrs = 3;
  total_size += 1 * this->attrs_size();
  for (int i = 0; i < this->attrs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attrs(i));
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_Form forms = 7;
  total_size += 1 * this->forms_size();
  for (int i = 0; i < this->forms_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->forms(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WorkReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WorkReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WorkReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WorkReport::MergeFrom(const PB_WorkReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  attrs_.MergeFrom(from.attrs_);
  forms_.MergeFrom(from.forms_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_work_report_id(from.work_report_id());
    }
    if (from._has_bit(1)) {
      set_content(from.content());
    }
    if (from._has_bit(3)) {
      set_type(from.type());
    }
    if (from._has_bit(4)) {
      set_wrdate(from.wrdate());
    }
    if (from._has_bit(5)) {
      set_version(from.version());
    }
    if (from._has_bit(7)) {
      set_create_pid(from.create_pid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_gid(from.gid());
    }
    if (from._has_bit(9)) {
      set_create_time(from.create_time());
    }
    if (from._has_bit(10)) {
      set_modify_pid(from.modify_pid());
    }
    if (from._has_bit(11)) {
      set_modify_time(from.modify_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WorkReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WorkReport::CopyFrom(const PB_WorkReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WorkReport::IsInitialized() const {
  
  return true;
}

void PB_WorkReport::Swap(PB_WorkReport* other) {
  if (other != this) {
    std::swap(work_report_id_, other->work_report_id_);
    std::swap(content_, other->content_);
    attrs_.Swap(&other->attrs_);
    std::swap(type_, other->type_);
    std::swap(wrdate_, other->wrdate_);
    std::swap(version_, other->version_);
    forms_.Swap(&other->forms_);
    std::swap(create_pid_, other->create_pid_);
    std::swap(gid_, other->gid_);
    std::swap(create_time_, other->create_time_);
    std::swap(modify_pid_, other->modify_pid_);
    std::swap(modify_time_, other->modify_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WorkReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WorkReport_descriptor_;
  metadata.reflection = PB_WorkReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRReadStatus::kDidFieldNumber;
const int PB_WRReadStatus::kPidFieldNumber;
const int PB_WRReadStatus::kTypeFieldNumber;
const int PB_WRReadStatus::kWrdateFieldNumber;
const int PB_WRReadStatus::kReadStatusFieldNumber;
const int PB_WRReadStatus::kReadTimeFieldNumber;
#endif  // !_MSC_VER

PB_WRReadStatus::PB_WRReadStatus() {
  SharedCtor();
}

void PB_WRReadStatus::InitAsDefaultInstance() {
}

PB_WRReadStatus::PB_WRReadStatus(const PB_WRReadStatus& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRReadStatus::SharedCtor() {
  _cached_size_ = 0;
  did_ = GOOGLE_LONGLONG(0);
  pid_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  wrdate_ = GOOGLE_LONGLONG(0);
  read_status_ = 0;
  read_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRReadStatus::~PB_WRReadStatus() {
  SharedDtor();
}

void PB_WRReadStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRReadStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRReadStatus_descriptor_;
}

const PB_WRReadStatus& PB_WRReadStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRReadStatus* PB_WRReadStatus::default_instance_ = NULL;

PB_WRReadStatus* PB_WRReadStatus::New() const {
  return new PB_WRReadStatus;
}

void PB_WRReadStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    did_ = GOOGLE_LONGLONG(0);
    pid_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    wrdate_ = GOOGLE_LONGLONG(0);
    read_status_ = 0;
    read_time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRReadStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 did = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &did_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_pid;
        break;
      }
      
      // optional int64 pid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_pid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &pid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_wrdate;
        break;
      }
      
      // optional int64 wrdate = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wrdate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &wrdate_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_read_status;
        break;
      }
      
      // optional int32 read_status = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_read_status:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &read_status_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_read_time;
        break;
      }
      
      // optional int64 read_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_read_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &read_time_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRReadStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRReadStatus::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 did = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->did(), output);
  }
  
  // optional int64 pid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->pid(), output);
  }
  
  // optional int32 type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  // optional int64 wrdate = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->wrdate(), output);
  }
  
  // optional int32 read_status = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->read_status(), output);
  }
  
  // optional int64 read_time = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->read_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRReadStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 did = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->did(), target);
  }
  
  // optional int64 pid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->pid(), target);
  }
  
  // optional int32 type = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  // optional int64 wrdate = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->wrdate(), target);
  }
  
  // optional int32 read_status = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->read_status(), target);
  }
  
  // optional int64 read_time = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->read_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRReadStatus::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 did = 1;
    if (has_did()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->did());
    }
    
    // optional int64 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 wrdate = 4;
    if (has_wrdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wrdate());
    }
    
    // optional int32 read_status = 5;
    if (has_read_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->read_status());
    }
    
    // optional int64 read_time = 6;
    if (has_read_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->read_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRReadStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRReadStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRReadStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRReadStatus::MergeFrom(const PB_WRReadStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_did(from.did());
    }
    if (from._has_bit(1)) {
      set_pid(from.pid());
    }
    if (from._has_bit(2)) {
      set_type(from.type());
    }
    if (from._has_bit(3)) {
      set_wrdate(from.wrdate());
    }
    if (from._has_bit(4)) {
      set_read_status(from.read_status());
    }
    if (from._has_bit(5)) {
      set_read_time(from.read_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRReadStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRReadStatus::CopyFrom(const PB_WRReadStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRReadStatus::IsInitialized() const {
  
  return true;
}

void PB_WRReadStatus::Swap(PB_WRReadStatus* other) {
  if (other != this) {
    std::swap(did_, other->did_);
    std::swap(pid_, other->pid_);
    std::swap(type_, other->type_);
    std::swap(wrdate_, other->wrdate_);
    std::swap(read_status_, other->read_status_);
    std::swap(read_time_, other->read_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRReadStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRReadStatus_descriptor_;
  metadata.reflection = PB_WRReadStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRCreateWorkReportReq::kWorkreportFieldNumber;
#endif  // !_MSC_VER

PB_WRCreateWorkReportReq::PB_WRCreateWorkReportReq() {
  SharedCtor();
}

void PB_WRCreateWorkReportReq::InitAsDefaultInstance() {
  workreport_ = const_cast< ::com::sangfor::moa::protobuf::PB_WorkReport*>(&::com::sangfor::moa::protobuf::PB_WorkReport::default_instance());
}

PB_WRCreateWorkReportReq::PB_WRCreateWorkReportReq(const PB_WRCreateWorkReportReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRCreateWorkReportReq::SharedCtor() {
  _cached_size_ = 0;
  workreport_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRCreateWorkReportReq::~PB_WRCreateWorkReportReq() {
  SharedDtor();
}

void PB_WRCreateWorkReportReq::SharedDtor() {
  if (this != default_instance_) {
    delete workreport_;
  }
}

const ::google::protobuf::Descriptor* PB_WRCreateWorkReportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRCreateWorkReportReq_descriptor_;
}

const PB_WRCreateWorkReportReq& PB_WRCreateWorkReportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRCreateWorkReportReq* PB_WRCreateWorkReportReq::default_instance_ = NULL;

PB_WRCreateWorkReportReq* PB_WRCreateWorkReportReq::New() const {
  return new PB_WRCreateWorkReportReq;
}

void PB_WRCreateWorkReportReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (workreport_ != NULL) workreport_->::com::sangfor::moa::protobuf::PB_WorkReport::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRCreateWorkReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_workreport()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRCreateWorkReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRCreateWorkReportReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->workreport(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRCreateWorkReportReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->workreport(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRCreateWorkReportReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 1;
    if (has_workreport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workreport());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRCreateWorkReportReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRCreateWorkReportReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRCreateWorkReportReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRCreateWorkReportReq::MergeFrom(const PB_WRCreateWorkReportReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_workreport()->::com::sangfor::moa::protobuf::PB_WorkReport::MergeFrom(from.workreport());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRCreateWorkReportReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRCreateWorkReportReq::CopyFrom(const PB_WRCreateWorkReportReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRCreateWorkReportReq::IsInitialized() const {
  
  return true;
}

void PB_WRCreateWorkReportReq::Swap(PB_WRCreateWorkReportReq* other) {
  if (other != this) {
    std::swap(workreport_, other->workreport_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRCreateWorkReportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRCreateWorkReportReq_descriptor_;
  metadata.reflection = PB_WRCreateWorkReportReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRCreateWorkReportRsp::kResultFieldNumber;
const int PB_WRCreateWorkReportRsp::kWorkReportIdFieldNumber;
const int PB_WRCreateWorkReportRsp::kVersionFieldNumber;
#endif  // !_MSC_VER

PB_WRCreateWorkReportRsp::PB_WRCreateWorkReportRsp() {
  SharedCtor();
}

void PB_WRCreateWorkReportRsp::InitAsDefaultInstance() {
}

PB_WRCreateWorkReportRsp::PB_WRCreateWorkReportRsp(const PB_WRCreateWorkReportRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRCreateWorkReportRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  work_report_id_ = GOOGLE_LONGLONG(0);
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRCreateWorkReportRsp::~PB_WRCreateWorkReportRsp() {
  SharedDtor();
}

void PB_WRCreateWorkReportRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRCreateWorkReportRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRCreateWorkReportRsp_descriptor_;
}

const PB_WRCreateWorkReportRsp& PB_WRCreateWorkReportRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRCreateWorkReportRsp* PB_WRCreateWorkReportRsp::default_instance_ = NULL;

PB_WRCreateWorkReportRsp* PB_WRCreateWorkReportRsp::New() const {
  return new PB_WRCreateWorkReportRsp;
}

void PB_WRCreateWorkReportRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    work_report_id_ = GOOGLE_LONGLONG(0);
    version_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRCreateWorkReportRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_work_report_id;
        break;
      }
      
      // optional int64 work_report_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_work_report_id:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &work_report_id_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_version;
        break;
      }
      
      // optional int32 version = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_version:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &version_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRCreateWorkReportRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRCreateWorkReportRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // optional int64 work_report_id = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->work_report_id(), output);
  }
  
  // optional int32 version = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->version(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRCreateWorkReportRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // optional int64 work_report_id = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->work_report_id(), target);
  }
  
  // optional int32 version = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->version(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRCreateWorkReportRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int64 work_report_id = 2;
    if (has_work_report_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->work_report_id());
    }
    
    // optional int32 version = 3;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRCreateWorkReportRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRCreateWorkReportRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRCreateWorkReportRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRCreateWorkReportRsp::MergeFrom(const PB_WRCreateWorkReportRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      set_work_report_id(from.work_report_id());
    }
    if (from._has_bit(2)) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRCreateWorkReportRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRCreateWorkReportRsp::CopyFrom(const PB_WRCreateWorkReportRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRCreateWorkReportRsp::IsInitialized() const {
  
  return true;
}

void PB_WRCreateWorkReportRsp::Swap(PB_WRCreateWorkReportRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(work_report_id_, other->work_report_id_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRCreateWorkReportRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRCreateWorkReportRsp_descriptor_;
  metadata.reflection = PB_WRCreateWorkReportRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetWorkReportReq::kWorkReportIdFieldNumber;
#endif  // !_MSC_VER

PB_WRGetWorkReportReq::PB_WRGetWorkReportReq() {
  SharedCtor();
}

void PB_WRGetWorkReportReq::InitAsDefaultInstance() {
}

PB_WRGetWorkReportReq::PB_WRGetWorkReportReq(const PB_WRGetWorkReportReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetWorkReportReq::SharedCtor() {
  _cached_size_ = 0;
  work_report_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetWorkReportReq::~PB_WRGetWorkReportReq() {
  SharedDtor();
}

void PB_WRGetWorkReportReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetWorkReportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetWorkReportReq_descriptor_;
}

const PB_WRGetWorkReportReq& PB_WRGetWorkReportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetWorkReportReq* PB_WRGetWorkReportReq::default_instance_ = NULL;

PB_WRGetWorkReportReq* PB_WRGetWorkReportReq::New() const {
  return new PB_WRGetWorkReportReq;
}

void PB_WRGetWorkReportReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    work_report_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetWorkReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 work_report_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &work_report_id_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetWorkReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetWorkReportReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 work_report_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->work_report_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetWorkReportReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 work_report_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->work_report_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetWorkReportReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 work_report_id = 1;
    if (has_work_report_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->work_report_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetWorkReportReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetWorkReportReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetWorkReportReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetWorkReportReq::MergeFrom(const PB_WRGetWorkReportReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_work_report_id(from.work_report_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetWorkReportReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetWorkReportReq::CopyFrom(const PB_WRGetWorkReportReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetWorkReportReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetWorkReportReq::Swap(PB_WRGetWorkReportReq* other) {
  if (other != this) {
    std::swap(work_report_id_, other->work_report_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetWorkReportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetWorkReportReq_descriptor_;
  metadata.reflection = PB_WRGetWorkReportReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetWorkReportRsp::kResultFieldNumber;
const int PB_WRGetWorkReportRsp::kWorkreportFieldNumber;
#endif  // !_MSC_VER

PB_WRGetWorkReportRsp::PB_WRGetWorkReportRsp() {
  SharedCtor();
}

void PB_WRGetWorkReportRsp::InitAsDefaultInstance() {
  workreport_ = const_cast< ::com::sangfor::moa::protobuf::PB_WorkReport*>(&::com::sangfor::moa::protobuf::PB_WorkReport::default_instance());
}

PB_WRGetWorkReportRsp::PB_WRGetWorkReportRsp(const PB_WRGetWorkReportRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetWorkReportRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  workreport_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetWorkReportRsp::~PB_WRGetWorkReportRsp() {
  SharedDtor();
}

void PB_WRGetWorkReportRsp::SharedDtor() {
  if (this != default_instance_) {
    delete workreport_;
  }
}

const ::google::protobuf::Descriptor* PB_WRGetWorkReportRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetWorkReportRsp_descriptor_;
}

const PB_WRGetWorkReportRsp& PB_WRGetWorkReportRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetWorkReportRsp* PB_WRGetWorkReportRsp::default_instance_ = NULL;

PB_WRGetWorkReportRsp* PB_WRGetWorkReportRsp::New() const {
  return new PB_WRGetWorkReportRsp;
}

void PB_WRGetWorkReportRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (_has_bit(1)) {
      if (workreport_ != NULL) workreport_->::com::sangfor::moa::protobuf::PB_WorkReport::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetWorkReportRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_workreport;
        break;
      }
      
      // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_workreport:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_workreport()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetWorkReportRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetWorkReportRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->workreport(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetWorkReportRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->workreport(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetWorkReportRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 2;
    if (has_workreport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workreport());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetWorkReportRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetWorkReportRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetWorkReportRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetWorkReportRsp::MergeFrom(const PB_WRGetWorkReportRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      mutable_workreport()->::com::sangfor::moa::protobuf::PB_WorkReport::MergeFrom(from.workreport());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetWorkReportRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetWorkReportRsp::CopyFrom(const PB_WRGetWorkReportRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetWorkReportRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetWorkReportRsp::Swap(PB_WRGetWorkReportRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(workreport_, other->workreport_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetWorkReportRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetWorkReportRsp_descriptor_;
  metadata.reflection = PB_WRGetWorkReportRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetWorkReportsReq::kCountFieldNumber;
const int PB_WRGetWorkReportsReq::kStartIdFieldNumber;
const int PB_WRGetWorkReportsReq::kLocalsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetWorkReportsReq::PB_WRGetWorkReportsReq() {
  SharedCtor();
}

void PB_WRGetWorkReportsReq::InitAsDefaultInstance() {
}

PB_WRGetWorkReportsReq::PB_WRGetWorkReportsReq(const PB_WRGetWorkReportsReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetWorkReportsReq::SharedCtor() {
  _cached_size_ = 0;
  count_ = GOOGLE_LONGLONG(10);
  start_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetWorkReportsReq::~PB_WRGetWorkReportsReq() {
  SharedDtor();
}

void PB_WRGetWorkReportsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetWorkReportsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetWorkReportsReq_descriptor_;
}

const PB_WRGetWorkReportsReq& PB_WRGetWorkReportsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetWorkReportsReq* PB_WRGetWorkReportsReq::default_instance_ = NULL;

PB_WRGetWorkReportsReq* PB_WRGetWorkReportsReq::New() const {
  return new PB_WRGetWorkReportsReq;
}

void PB_WRGetWorkReportsReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = GOOGLE_LONGLONG(10);
    start_id_ = GOOGLE_LONGLONG(0);
  }
  locals_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetWorkReportsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 count = 1 [default = 10];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_start_id;
        break;
      }
      
      // optional int64 start_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_id:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_id_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_locals;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WorkReport locals = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_locals:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_locals()));
        if (input->ExpectTag(26)) goto parse_locals;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetWorkReportsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetWorkReportsReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 count = 1 [default = 10];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }
  
  // optional int64 start_id = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_id(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport locals = 3;
  for (int i = 0; i < this->locals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->locals(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetWorkReportsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 count = 1 [default = 10];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }
  
  // optional int64 start_id = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start_id(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport locals = 3;
  for (int i = 0; i < this->locals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->locals(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetWorkReportsReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 count = 1 [default = 10];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
    // optional int64 start_id = 2;
    if (has_start_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_id());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport locals = 3;
  total_size += 1 * this->locals_size();
  for (int i = 0; i < this->locals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locals(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetWorkReportsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetWorkReportsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetWorkReportsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetWorkReportsReq::MergeFrom(const PB_WRGetWorkReportsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  locals_.MergeFrom(from.locals_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_count(from.count());
    }
    if (from._has_bit(1)) {
      set_start_id(from.start_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetWorkReportsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetWorkReportsReq::CopyFrom(const PB_WRGetWorkReportsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetWorkReportsReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetWorkReportsReq::Swap(PB_WRGetWorkReportsReq* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    std::swap(start_id_, other->start_id_);
    locals_.Swap(&other->locals_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetWorkReportsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetWorkReportsReq_descriptor_;
  metadata.reflection = PB_WRGetWorkReportsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetWorkReportsRsp::kResultFieldNumber;
const int PB_WRGetWorkReportsRsp::kWorkreportsFieldNumber;
const int PB_WRGetWorkReportsRsp::kDelsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetWorkReportsRsp::PB_WRGetWorkReportsRsp() {
  SharedCtor();
}

void PB_WRGetWorkReportsRsp::InitAsDefaultInstance() {
}

PB_WRGetWorkReportsRsp::PB_WRGetWorkReportsRsp(const PB_WRGetWorkReportsRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetWorkReportsRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetWorkReportsRsp::~PB_WRGetWorkReportsRsp() {
  SharedDtor();
}

void PB_WRGetWorkReportsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetWorkReportsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetWorkReportsRsp_descriptor_;
}

const PB_WRGetWorkReportsRsp& PB_WRGetWorkReportsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetWorkReportsRsp* PB_WRGetWorkReportsRsp::default_instance_ = NULL;

PB_WRGetWorkReportsRsp* PB_WRGetWorkReportsRsp::New() const {
  return new PB_WRGetWorkReportsRsp;
}

void PB_WRGetWorkReportsRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  workreports_.Clear();
  dels_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetWorkReportsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_workreports;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_workreports:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_workreports()));
        if (input->ExpectTag(18)) goto parse_workreports;
        if (input->ExpectTag(24)) goto parse_dels;
        break;
      }
      
      // repeated int64 dels = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dels:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_dels(value);
        if (input->ExpectTag(24)) goto parse_dels;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetWorkReportsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetWorkReportsRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->workreports(i), output);
  }
  
  // repeated int64 dels = 3;
  for (int i = 0; i < this->dels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->dels(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetWorkReportsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->workreports(i), target);
  }
  
  // repeated int64 dels = 3;
  for (int i = 0; i < this->dels_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->dels(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetWorkReportsRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  total_size += 1 * this->workreports_size();
  for (int i = 0; i < this->workreports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->workreports(i));
  }
  
  // repeated int64 dels = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->dels_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->dels(i));
    }
    total_size += 1 * this->dels_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetWorkReportsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetWorkReportsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetWorkReportsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetWorkReportsRsp::MergeFrom(const PB_WRGetWorkReportsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  workreports_.MergeFrom(from.workreports_);
  dels_.MergeFrom(from.dels_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetWorkReportsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetWorkReportsRsp::CopyFrom(const PB_WRGetWorkReportsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetWorkReportsRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetWorkReportsRsp::Swap(PB_WRGetWorkReportsRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    workreports_.Swap(&other->workreports_);
    dels_.Swap(&other->dels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetWorkReportsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetWorkReportsRsp_descriptor_;
  metadata.reflection = PB_WRGetWorkReportsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementWorkReportsNumReq::kTypeFieldNumber;
const int PB_WRGetManagementWorkReportsNumReq::kCountFieldNumber;
const int PB_WRGetManagementWorkReportsNumReq::kStartDateFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementWorkReportsNumReq::PB_WRGetManagementWorkReportsNumReq() {
  SharedCtor();
}

void PB_WRGetManagementWorkReportsNumReq::InitAsDefaultInstance() {
}

PB_WRGetManagementWorkReportsNumReq::PB_WRGetManagementWorkReportsNumReq(const PB_WRGetManagementWorkReportsNumReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportsNumReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  count_ = GOOGLE_LONGLONG(0);
  start_date_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementWorkReportsNumReq::~PB_WRGetManagementWorkReportsNumReq() {
  SharedDtor();
}

void PB_WRGetManagementWorkReportsNumReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportsNumReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementWorkReportsNumReq_descriptor_;
}

const PB_WRGetManagementWorkReportsNumReq& PB_WRGetManagementWorkReportsNumReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementWorkReportsNumReq* PB_WRGetManagementWorkReportsNumReq::default_instance_ = NULL;

PB_WRGetManagementWorkReportsNumReq* PB_WRGetManagementWorkReportsNumReq::New() const {
  return new PB_WRGetManagementWorkReportsNumReq;
}

void PB_WRGetManagementWorkReportsNumReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    count_ = GOOGLE_LONGLONG(0);
    start_date_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementWorkReportsNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }
      
      // optional int64 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_start_date;
        break;
      }
      
      // optional int64 start_date = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_date_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementWorkReportsNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementWorkReportsNumReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }
  
  // optional int64 start_date = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_date(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementWorkReportsNumReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }
  
  // optional int64 start_date = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_date(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementWorkReportsNumReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
    // optional int64 start_date = 3;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_date());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementWorkReportsNumReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementWorkReportsNumReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementWorkReportsNumReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementWorkReportsNumReq::MergeFrom(const PB_WRGetManagementWorkReportsNumReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_count(from.count());
    }
    if (from._has_bit(2)) {
      set_start_date(from.start_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementWorkReportsNumReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportsNumReq::CopyFrom(const PB_WRGetManagementWorkReportsNumReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementWorkReportsNumReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementWorkReportsNumReq::Swap(PB_WRGetManagementWorkReportsNumReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(count_, other->count_);
    std::swap(start_date_, other->start_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementWorkReportsNumReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementWorkReportsNumReq_descriptor_;
  metadata.reflection = PB_WRGetManagementWorkReportsNumReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementWorkReportsNumRsp_PB_Record::kDateFieldNumber;
const int PB_WRGetManagementWorkReportsNumRsp_PB_Record::kCountFieldNumber;
const int PB_WRGetManagementWorkReportsNumRsp_PB_Record::kReadStatusFieldNumber;
const int PB_WRGetManagementWorkReportsNumRsp_PB_Record::kReadTimeFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementWorkReportsNumRsp_PB_Record::PB_WRGetManagementWorkReportsNumRsp_PB_Record() {
  SharedCtor();
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::InitAsDefaultInstance() {
}

PB_WRGetManagementWorkReportsNumRsp_PB_Record::PB_WRGetManagementWorkReportsNumRsp_PB_Record(const PB_WRGetManagementWorkReportsNumRsp_PB_Record& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::SharedCtor() {
  _cached_size_ = 0;
  date_ = GOOGLE_LONGLONG(0);
  count_ = GOOGLE_LONGLONG(0);
  read_status_ = 0;
  read_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementWorkReportsNumRsp_PB_Record::~PB_WRGetManagementWorkReportsNumRsp_PB_Record() {
  SharedDtor();
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportsNumRsp_PB_Record::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementWorkReportsNumRsp_PB_Record_descriptor_;
}

const PB_WRGetManagementWorkReportsNumRsp_PB_Record& PB_WRGetManagementWorkReportsNumRsp_PB_Record::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementWorkReportsNumRsp_PB_Record* PB_WRGetManagementWorkReportsNumRsp_PB_Record::default_instance_ = NULL;

PB_WRGetManagementWorkReportsNumRsp_PB_Record* PB_WRGetManagementWorkReportsNumRsp_PB_Record::New() const {
  return new PB_WRGetManagementWorkReportsNumRsp_PB_Record;
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    date_ = GOOGLE_LONGLONG(0);
    count_ = GOOGLE_LONGLONG(0);
    read_status_ = 0;
    read_time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementWorkReportsNumRsp_PB_Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 date = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &date_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }
      
      // optional int64 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_read_status;
        break;
      }
      
      // optional int32 read_status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_read_status:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &read_status_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_read_time;
        break;
      }
      
      // optional int64 read_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_read_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &read_time_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementWorkReportsNumRsp_PB_Record::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 date = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->date(), output);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }
  
  // optional int32 read_status = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->read_status(), output);
  }
  
  // optional int64 read_time = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->read_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementWorkReportsNumRsp_PB_Record::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 date = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->date(), target);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }
  
  // optional int32 read_status = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->read_status(), target);
  }
  
  // optional int64 read_time = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->read_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementWorkReportsNumRsp_PB_Record::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 date = 1;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date());
    }
    
    // optional int64 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
    // optional int32 read_status = 3;
    if (has_read_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->read_status());
    }
    
    // optional int64 read_time = 4;
    if (has_read_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->read_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementWorkReportsNumRsp_PB_Record* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementWorkReportsNumRsp_PB_Record*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::MergeFrom(const PB_WRGetManagementWorkReportsNumRsp_PB_Record& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_date(from.date());
    }
    if (from._has_bit(1)) {
      set_count(from.count());
    }
    if (from._has_bit(2)) {
      set_read_status(from.read_status());
    }
    if (from._has_bit(3)) {
      set_read_time(from.read_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::CopyFrom(const PB_WRGetManagementWorkReportsNumRsp_PB_Record& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementWorkReportsNumRsp_PB_Record::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementWorkReportsNumRsp_PB_Record::Swap(PB_WRGetManagementWorkReportsNumRsp_PB_Record* other) {
  if (other != this) {
    std::swap(date_, other->date_);
    std::swap(count_, other->count_);
    std::swap(read_status_, other->read_status_);
    std::swap(read_time_, other->read_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementWorkReportsNumRsp_PB_Record::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementWorkReportsNumRsp_PB_Record_descriptor_;
  metadata.reflection = PB_WRGetManagementWorkReportsNumRsp_PB_Record_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_WRGetManagementWorkReportsNumRsp::kResultFieldNumber;
const int PB_WRGetManagementWorkReportsNumRsp::kRecordsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementWorkReportsNumRsp::PB_WRGetManagementWorkReportsNumRsp() {
  SharedCtor();
}

void PB_WRGetManagementWorkReportsNumRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementWorkReportsNumRsp::PB_WRGetManagementWorkReportsNumRsp(const PB_WRGetManagementWorkReportsNumRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportsNumRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementWorkReportsNumRsp::~PB_WRGetManagementWorkReportsNumRsp() {
  SharedDtor();
}

void PB_WRGetManagementWorkReportsNumRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportsNumRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementWorkReportsNumRsp_descriptor_;
}

const PB_WRGetManagementWorkReportsNumRsp& PB_WRGetManagementWorkReportsNumRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementWorkReportsNumRsp* PB_WRGetManagementWorkReportsNumRsp::default_instance_ = NULL;

PB_WRGetManagementWorkReportsNumRsp* PB_WRGetManagementWorkReportsNumRsp::New() const {
  return new PB_WRGetManagementWorkReportsNumRsp;
}

void PB_WRGetManagementWorkReportsNumRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  records_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementWorkReportsNumRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_records;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementWorkReportsNumRsp.PB_Record records = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_records:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_records()));
        if (input->ExpectTag(18)) goto parse_records;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementWorkReportsNumRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementWorkReportsNumRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementWorkReportsNumRsp.PB_Record records = 2;
  for (int i = 0; i < this->records_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->records(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementWorkReportsNumRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementWorkReportsNumRsp.PB_Record records = 2;
  for (int i = 0; i < this->records_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->records(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementWorkReportsNumRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementWorkReportsNumRsp.PB_Record records = 2;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementWorkReportsNumRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementWorkReportsNumRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementWorkReportsNumRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementWorkReportsNumRsp::MergeFrom(const PB_WRGetManagementWorkReportsNumRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  records_.MergeFrom(from.records_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementWorkReportsNumRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportsNumRsp::CopyFrom(const PB_WRGetManagementWorkReportsNumRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementWorkReportsNumRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementWorkReportsNumRsp::Swap(PB_WRGetManagementWorkReportsNumRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    records_.Swap(&other->records_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementWorkReportsNumRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementWorkReportsNumRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementWorkReportsNumRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementWorkReportListReq::kTypeFieldNumber;
const int PB_WRGetManagementWorkReportListReq::kWrdateFieldNumber;
const int PB_WRGetManagementWorkReportListReq::kCountFieldNumber;
const int PB_WRGetManagementWorkReportListReq::kStartIdFieldNumber;
const int PB_WRGetManagementWorkReportListReq::kGidsFieldNumber;
const int PB_WRGetManagementWorkReportListReq::kSkipFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementWorkReportListReq::PB_WRGetManagementWorkReportListReq() {
  SharedCtor();
}

void PB_WRGetManagementWorkReportListReq::InitAsDefaultInstance() {
}

PB_WRGetManagementWorkReportListReq::PB_WRGetManagementWorkReportListReq(const PB_WRGetManagementWorkReportListReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportListReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  wrdate_ = GOOGLE_LONGLONG(0);
  count_ = 15;
  start_id_ = GOOGLE_LONGLONG(0);
  skip_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementWorkReportListReq::~PB_WRGetManagementWorkReportListReq() {
  SharedDtor();
}

void PB_WRGetManagementWorkReportListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementWorkReportListReq_descriptor_;
}

const PB_WRGetManagementWorkReportListReq& PB_WRGetManagementWorkReportListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementWorkReportListReq* PB_WRGetManagementWorkReportListReq::default_instance_ = NULL;

PB_WRGetManagementWorkReportListReq* PB_WRGetManagementWorkReportListReq::New() const {
  return new PB_WRGetManagementWorkReportListReq;
}

void PB_WRGetManagementWorkReportListReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    wrdate_ = GOOGLE_LONGLONG(0);
    count_ = 15;
    start_id_ = GOOGLE_LONGLONG(0);
    skip_ = 0;
  }
  gids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementWorkReportListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_wrdate;
        break;
      }
      
      // optional int64 wrdate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wrdate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &wrdate_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }
      
      // optional int32 count = 3 [default = 15];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &count_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_start_id;
        break;
      }
      
      // optional int64 start_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_id:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_id_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_gids;
        break;
      }
      
      // repeated int64 gids = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_gids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_gids(value);
        if (input->ExpectTag(40)) goto parse_gids;
        if (input->ExpectTag(48)) goto parse_skip;
        break;
      }
      
      // optional int32 skip = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_skip:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &skip_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementWorkReportListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementWorkReportListReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 wrdate = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->wrdate(), output);
  }
  
  // optional int32 count = 3 [default = 15];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }
  
  // optional int64 start_id = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->start_id(), output);
  }
  
  // repeated int64 gids = 5;
  for (int i = 0; i < this->gids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      5, this->gids(i), output);
  }
  
  // optional int32 skip = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skip(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementWorkReportListReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 wrdate = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->wrdate(), target);
  }
  
  // optional int32 count = 3 [default = 15];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }
  
  // optional int64 start_id = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->start_id(), target);
  }
  
  // repeated int64 gids = 5;
  for (int i = 0; i < this->gids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(5, this->gids(i), target);
  }
  
  // optional int32 skip = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skip(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementWorkReportListReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 wrdate = 2;
    if (has_wrdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wrdate());
    }
    
    // optional int32 count = 3 [default = 15];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }
    
    // optional int64 start_id = 4;
    if (has_start_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_id());
    }
    
    // optional int32 skip = 6;
    if (has_skip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skip());
    }
    
  }
  // repeated int64 gids = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->gids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->gids(i));
    }
    total_size += 1 * this->gids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementWorkReportListReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementWorkReportListReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementWorkReportListReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementWorkReportListReq::MergeFrom(const PB_WRGetManagementWorkReportListReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  gids_.MergeFrom(from.gids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_wrdate(from.wrdate());
    }
    if (from._has_bit(2)) {
      set_count(from.count());
    }
    if (from._has_bit(3)) {
      set_start_id(from.start_id());
    }
    if (from._has_bit(5)) {
      set_skip(from.skip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementWorkReportListReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportListReq::CopyFrom(const PB_WRGetManagementWorkReportListReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementWorkReportListReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementWorkReportListReq::Swap(PB_WRGetManagementWorkReportListReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(wrdate_, other->wrdate_);
    std::swap(count_, other->count_);
    std::swap(start_id_, other->start_id_);
    gids_.Swap(&other->gids_);
    std::swap(skip_, other->skip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementWorkReportListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementWorkReportListReq_descriptor_;
  metadata.reflection = PB_WRGetManagementWorkReportListReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementWorkReportListRsp::kResultFieldNumber;
const int PB_WRGetManagementWorkReportListRsp::kWorkreportsFieldNumber;
const int PB_WRGetManagementWorkReportListRsp::kTotalWorkreportsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementWorkReportListRsp::PB_WRGetManagementWorkReportListRsp() {
  SharedCtor();
}

void PB_WRGetManagementWorkReportListRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementWorkReportListRsp::PB_WRGetManagementWorkReportListRsp(const PB_WRGetManagementWorkReportListRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportListRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  total_workreports_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementWorkReportListRsp::~PB_WRGetManagementWorkReportListRsp() {
  SharedDtor();
}

void PB_WRGetManagementWorkReportListRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementWorkReportListRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementWorkReportListRsp_descriptor_;
}

const PB_WRGetManagementWorkReportListRsp& PB_WRGetManagementWorkReportListRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementWorkReportListRsp* PB_WRGetManagementWorkReportListRsp::default_instance_ = NULL;

PB_WRGetManagementWorkReportListRsp* PB_WRGetManagementWorkReportListRsp::New() const {
  return new PB_WRGetManagementWorkReportListRsp;
}

void PB_WRGetManagementWorkReportListRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    total_workreports_ = 0;
  }
  workreports_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementWorkReportListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_workreports;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_workreports:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_workreports()));
        if (input->ExpectTag(18)) goto parse_workreports;
        if (input->ExpectTag(24)) goto parse_total_workreports;
        break;
      }
      
      // optional int32 total_workreports = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_total_workreports:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &total_workreports_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementWorkReportListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementWorkReportListRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->workreports(i), output);
  }
  
  // optional int32 total_workreports = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_workreports(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementWorkReportListRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->workreports(i), target);
  }
  
  // optional int32 total_workreports = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_workreports(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementWorkReportListRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int32 total_workreports = 3;
    if (has_total_workreports()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_workreports());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  total_size += 1 * this->workreports_size();
  for (int i = 0; i < this->workreports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->workreports(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementWorkReportListRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementWorkReportListRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementWorkReportListRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementWorkReportListRsp::MergeFrom(const PB_WRGetManagementWorkReportListRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  workreports_.MergeFrom(from.workreports_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(2)) {
      set_total_workreports(from.total_workreports());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementWorkReportListRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementWorkReportListRsp::CopyFrom(const PB_WRGetManagementWorkReportListRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementWorkReportListRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementWorkReportListRsp::Swap(PB_WRGetManagementWorkReportListRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    workreports_.Swap(&other->workreports_);
    std::swap(total_workreports_, other->total_workreports_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementWorkReportListRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementWorkReportListRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementWorkReportListRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsNumReq::kTypeFieldNumber;
const int PB_WRGetManagementGroupWorkReportsNumReq::kWrdateFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsNumReq::PB_WRGetManagementGroupWorkReportsNumReq() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsNumReq::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsNumReq::PB_WRGetManagementGroupWorkReportsNumReq(const PB_WRGetManagementGroupWorkReportsNumReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsNumReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  wrdate_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsNumReq::~PB_WRGetManagementGroupWorkReportsNumReq() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsNumReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsNumReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsNumReq_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsNumReq& PB_WRGetManagementGroupWorkReportsNumReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsNumReq* PB_WRGetManagementGroupWorkReportsNumReq::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsNumReq* PB_WRGetManagementGroupWorkReportsNumReq::New() const {
  return new PB_WRGetManagementGroupWorkReportsNumReq;
}

void PB_WRGetManagementGroupWorkReportsNumReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    wrdate_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_wrdate;
        break;
      }
      
      // optional int64 wrdate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wrdate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &wrdate_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsNumReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 wrdate = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->wrdate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsNumReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 wrdate = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->wrdate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsNumReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 wrdate = 2;
    if (has_wrdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wrdate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsNumReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsNumReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsNumReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsNumReq::MergeFrom(const PB_WRGetManagementGroupWorkReportsNumReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_wrdate(from.wrdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsNumReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsNumReq::CopyFrom(const PB_WRGetManagementGroupWorkReportsNumReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsNumReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsNumReq::Swap(PB_WRGetManagementGroupWorkReportsNumReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(wrdate_, other->wrdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsNumReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsNumReq_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsNumReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::kGidFieldNumber;
const int PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::kCountFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic(const PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::SharedCtor() {
  _cached_size_ = 0;
  gid_ = GOOGLE_LONGLONG(0);
  count_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::~PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic& PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic* PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic* PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::New() const {
  return new PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic;
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gid_ = GOOGLE_LONGLONG(0);
    count_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 gid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &gid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }
      
      // optional int64 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 gid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->gid(), output);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 gid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->gid(), target);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 gid = 1;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gid());
    }
    
    // optional int64 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::MergeFrom(const PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_gid(from.gid());
    }
    if (from._has_bit(1)) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::CopyFrom(const PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::Swap(PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic* other) {
  if (other != this) {
    std::swap(gid_, other->gid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsNumRsp_PB_GroupStatic_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsNumRsp::kResultFieldNumber;
const int PB_WRGetManagementGroupWorkReportsNumRsp::kGroupStatsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsNumRsp::PB_WRGetManagementGroupWorkReportsNumRsp() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsNumRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsNumRsp::PB_WRGetManagementGroupWorkReportsNumRsp(const PB_WRGetManagementGroupWorkReportsNumRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsNumRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsNumRsp::~PB_WRGetManagementGroupWorkReportsNumRsp() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsNumRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsNumRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsNumRsp_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsNumRsp& PB_WRGetManagementGroupWorkReportsNumRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsNumRsp* PB_WRGetManagementGroupWorkReportsNumRsp::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsNumRsp* PB_WRGetManagementGroupWorkReportsNumRsp::New() const {
  return new PB_WRGetManagementGroupWorkReportsNumRsp;
}

void PB_WRGetManagementGroupWorkReportsNumRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  group_stats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsNumRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_group_stats;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsNumRsp.PB_GroupStatic group_stats = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_group_stats:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_group_stats()));
        if (input->ExpectTag(18)) goto parse_group_stats;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsNumRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsNumRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsNumRsp.PB_GroupStatic group_stats = 2;
  for (int i = 0; i < this->group_stats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->group_stats(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsNumRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsNumRsp.PB_GroupStatic group_stats = 2;
  for (int i = 0; i < this->group_stats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->group_stats(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsNumRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsNumRsp.PB_GroupStatic group_stats = 2;
  total_size += 1 * this->group_stats_size();
  for (int i = 0; i < this->group_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->group_stats(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsNumRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsNumRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsNumRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsNumRsp::MergeFrom(const PB_WRGetManagementGroupWorkReportsNumRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  group_stats_.MergeFrom(from.group_stats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsNumRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsNumRsp::CopyFrom(const PB_WRGetManagementGroupWorkReportsNumRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsNumRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsNumRsp::Swap(PB_WRGetManagementGroupWorkReportsNumRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    group_stats_.Swap(&other->group_stats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsNumRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsNumRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsNumRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRDelWorkReportsReq::kWorkReportIdsFieldNumber;
#endif  // !_MSC_VER

PB_WRDelWorkReportsReq::PB_WRDelWorkReportsReq() {
  SharedCtor();
}

void PB_WRDelWorkReportsReq::InitAsDefaultInstance() {
}

PB_WRDelWorkReportsReq::PB_WRDelWorkReportsReq(const PB_WRDelWorkReportsReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRDelWorkReportsReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRDelWorkReportsReq::~PB_WRDelWorkReportsReq() {
  SharedDtor();
}

void PB_WRDelWorkReportsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRDelWorkReportsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRDelWorkReportsReq_descriptor_;
}

const PB_WRDelWorkReportsReq& PB_WRDelWorkReportsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRDelWorkReportsReq* PB_WRDelWorkReportsReq::default_instance_ = NULL;

PB_WRDelWorkReportsReq* PB_WRDelWorkReportsReq::New() const {
  return new PB_WRDelWorkReportsReq;
}

void PB_WRDelWorkReportsReq::Clear() {
  work_report_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRDelWorkReportsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 work_report_ids = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_work_report_ids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_work_report_ids(value);
        if (input->ExpectTag(8)) goto parse_work_report_ids;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRDelWorkReportsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRDelWorkReportsReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated int64 work_report_ids = 1;
  for (int i = 0; i < this->work_report_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->work_report_ids(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRDelWorkReportsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 work_report_ids = 1;
  for (int i = 0; i < this->work_report_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->work_report_ids(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRDelWorkReportsReq::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 work_report_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->work_report_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->work_report_ids(i));
    }
    total_size += 1 * this->work_report_ids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRDelWorkReportsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRDelWorkReportsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRDelWorkReportsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRDelWorkReportsReq::MergeFrom(const PB_WRDelWorkReportsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  work_report_ids_.MergeFrom(from.work_report_ids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRDelWorkReportsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRDelWorkReportsReq::CopyFrom(const PB_WRDelWorkReportsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRDelWorkReportsReq::IsInitialized() const {
  
  return true;
}

void PB_WRDelWorkReportsReq::Swap(PB_WRDelWorkReportsReq* other) {
  if (other != this) {
    work_report_ids_.Swap(&other->work_report_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRDelWorkReportsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRDelWorkReportsReq_descriptor_;
  metadata.reflection = PB_WRDelWorkReportsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRDelWorkReportsRsp_PB_DelFail::kResultFieldNumber;
const int PB_WRDelWorkReportsRsp_PB_DelFail::kWorkReportIdFieldNumber;
#endif  // !_MSC_VER

PB_WRDelWorkReportsRsp_PB_DelFail::PB_WRDelWorkReportsRsp_PB_DelFail() {
  SharedCtor();
}

void PB_WRDelWorkReportsRsp_PB_DelFail::InitAsDefaultInstance() {
}

PB_WRDelWorkReportsRsp_PB_DelFail::PB_WRDelWorkReportsRsp_PB_DelFail(const PB_WRDelWorkReportsRsp_PB_DelFail& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRDelWorkReportsRsp_PB_DelFail::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  work_report_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRDelWorkReportsRsp_PB_DelFail::~PB_WRDelWorkReportsRsp_PB_DelFail() {
  SharedDtor();
}

void PB_WRDelWorkReportsRsp_PB_DelFail::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRDelWorkReportsRsp_PB_DelFail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRDelWorkReportsRsp_PB_DelFail_descriptor_;
}

const PB_WRDelWorkReportsRsp_PB_DelFail& PB_WRDelWorkReportsRsp_PB_DelFail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRDelWorkReportsRsp_PB_DelFail* PB_WRDelWorkReportsRsp_PB_DelFail::default_instance_ = NULL;

PB_WRDelWorkReportsRsp_PB_DelFail* PB_WRDelWorkReportsRsp_PB_DelFail::New() const {
  return new PB_WRDelWorkReportsRsp_PB_DelFail;
}

void PB_WRDelWorkReportsRsp_PB_DelFail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    work_report_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRDelWorkReportsRsp_PB_DelFail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 work_report_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &work_report_id_));
        _set_bit(1);
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }
      
      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_result:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRDelWorkReportsRsp_PB_DelFail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRDelWorkReportsRsp_PB_DelFail::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 work_report_id = 1;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->work_report_id(), output);
  }
  
  // optional int32 result = 2;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRDelWorkReportsRsp_PB_DelFail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 work_report_id = 1;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->work_report_id(), target);
  }
  
  // optional int32 result = 2;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRDelWorkReportsRsp_PB_DelFail::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int64 work_report_id = 1;
    if (has_work_report_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->work_report_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRDelWorkReportsRsp_PB_DelFail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRDelWorkReportsRsp_PB_DelFail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRDelWorkReportsRsp_PB_DelFail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRDelWorkReportsRsp_PB_DelFail::MergeFrom(const PB_WRDelWorkReportsRsp_PB_DelFail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      set_work_report_id(from.work_report_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRDelWorkReportsRsp_PB_DelFail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRDelWorkReportsRsp_PB_DelFail::CopyFrom(const PB_WRDelWorkReportsRsp_PB_DelFail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRDelWorkReportsRsp_PB_DelFail::IsInitialized() const {
  
  return true;
}

void PB_WRDelWorkReportsRsp_PB_DelFail::Swap(PB_WRDelWorkReportsRsp_PB_DelFail* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(work_report_id_, other->work_report_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRDelWorkReportsRsp_PB_DelFail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRDelWorkReportsRsp_PB_DelFail_descriptor_;
  metadata.reflection = PB_WRDelWorkReportsRsp_PB_DelFail_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_WRDelWorkReportsRsp::kResultFieldNumber;
const int PB_WRDelWorkReportsRsp::kFailsFieldNumber;
#endif  // !_MSC_VER

PB_WRDelWorkReportsRsp::PB_WRDelWorkReportsRsp() {
  SharedCtor();
}

void PB_WRDelWorkReportsRsp::InitAsDefaultInstance() {
}

PB_WRDelWorkReportsRsp::PB_WRDelWorkReportsRsp(const PB_WRDelWorkReportsRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRDelWorkReportsRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRDelWorkReportsRsp::~PB_WRDelWorkReportsRsp() {
  SharedDtor();
}

void PB_WRDelWorkReportsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRDelWorkReportsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRDelWorkReportsRsp_descriptor_;
}

const PB_WRDelWorkReportsRsp& PB_WRDelWorkReportsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRDelWorkReportsRsp* PB_WRDelWorkReportsRsp::default_instance_ = NULL;

PB_WRDelWorkReportsRsp* PB_WRDelWorkReportsRsp::New() const {
  return new PB_WRDelWorkReportsRsp;
}

void PB_WRDelWorkReportsRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  fails_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRDelWorkReportsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_fails;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WRDelWorkReportsRsp.PB_DelFail fails = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_fails:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_fails()));
        if (input->ExpectTag(18)) goto parse_fails;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRDelWorkReportsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRDelWorkReportsRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRDelWorkReportsRsp.PB_DelFail fails = 2;
  for (int i = 0; i < this->fails_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->fails(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRDelWorkReportsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRDelWorkReportsRsp.PB_DelFail fails = 2;
  for (int i = 0; i < this->fails_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fails(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRDelWorkReportsRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WRDelWorkReportsRsp.PB_DelFail fails = 2;
  total_size += 1 * this->fails_size();
  for (int i = 0; i < this->fails_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fails(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRDelWorkReportsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRDelWorkReportsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRDelWorkReportsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRDelWorkReportsRsp::MergeFrom(const PB_WRDelWorkReportsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  fails_.MergeFrom(from.fails_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRDelWorkReportsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRDelWorkReportsRsp::CopyFrom(const PB_WRDelWorkReportsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRDelWorkReportsRsp::IsInitialized() const {
  
  return true;
}

void PB_WRDelWorkReportsRsp::Swap(PB_WRDelWorkReportsRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    fails_.Swap(&other->fails_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRDelWorkReportsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRDelWorkReportsRsp_descriptor_;
  metadata.reflection = PB_WRDelWorkReportsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRModifyWorkReportReq::kWorkreportFieldNumber;
#endif  // !_MSC_VER

PB_WRModifyWorkReportReq::PB_WRModifyWorkReportReq() {
  SharedCtor();
}

void PB_WRModifyWorkReportReq::InitAsDefaultInstance() {
  workreport_ = const_cast< ::com::sangfor::moa::protobuf::PB_WorkReport*>(&::com::sangfor::moa::protobuf::PB_WorkReport::default_instance());
}

PB_WRModifyWorkReportReq::PB_WRModifyWorkReportReq(const PB_WRModifyWorkReportReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRModifyWorkReportReq::SharedCtor() {
  _cached_size_ = 0;
  workreport_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRModifyWorkReportReq::~PB_WRModifyWorkReportReq() {
  SharedDtor();
}

void PB_WRModifyWorkReportReq::SharedDtor() {
  if (this != default_instance_) {
    delete workreport_;
  }
}

const ::google::protobuf::Descriptor* PB_WRModifyWorkReportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRModifyWorkReportReq_descriptor_;
}

const PB_WRModifyWorkReportReq& PB_WRModifyWorkReportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRModifyWorkReportReq* PB_WRModifyWorkReportReq::default_instance_ = NULL;

PB_WRModifyWorkReportReq* PB_WRModifyWorkReportReq::New() const {
  return new PB_WRModifyWorkReportReq;
}

void PB_WRModifyWorkReportReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (workreport_ != NULL) workreport_->::com::sangfor::moa::protobuf::PB_WorkReport::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRModifyWorkReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_workreport()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRModifyWorkReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRModifyWorkReportReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->workreport(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRModifyWorkReportReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->workreport(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRModifyWorkReportReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.sangfor.moa.protobuf.PB_WorkReport workreport = 1;
    if (has_workreport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workreport());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRModifyWorkReportReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRModifyWorkReportReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRModifyWorkReportReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRModifyWorkReportReq::MergeFrom(const PB_WRModifyWorkReportReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_workreport()->::com::sangfor::moa::protobuf::PB_WorkReport::MergeFrom(from.workreport());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRModifyWorkReportReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRModifyWorkReportReq::CopyFrom(const PB_WRModifyWorkReportReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRModifyWorkReportReq::IsInitialized() const {
  
  return true;
}

void PB_WRModifyWorkReportReq::Swap(PB_WRModifyWorkReportReq* other) {
  if (other != this) {
    std::swap(workreport_, other->workreport_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRModifyWorkReportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRModifyWorkReportReq_descriptor_;
  metadata.reflection = PB_WRModifyWorkReportReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRModifyWorkReportRsp::kResultFieldNumber;
const int PB_WRModifyWorkReportRsp::kVersionFieldNumber;
#endif  // !_MSC_VER

PB_WRModifyWorkReportRsp::PB_WRModifyWorkReportRsp() {
  SharedCtor();
}

void PB_WRModifyWorkReportRsp::InitAsDefaultInstance() {
}

PB_WRModifyWorkReportRsp::PB_WRModifyWorkReportRsp(const PB_WRModifyWorkReportRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRModifyWorkReportRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRModifyWorkReportRsp::~PB_WRModifyWorkReportRsp() {
  SharedDtor();
}

void PB_WRModifyWorkReportRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRModifyWorkReportRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRModifyWorkReportRsp_descriptor_;
}

const PB_WRModifyWorkReportRsp& PB_WRModifyWorkReportRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRModifyWorkReportRsp* PB_WRModifyWorkReportRsp::default_instance_ = NULL;

PB_WRModifyWorkReportRsp* PB_WRModifyWorkReportRsp::New() const {
  return new PB_WRModifyWorkReportRsp;
}

void PB_WRModifyWorkReportRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    version_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRModifyWorkReportRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }
      
      // optional int32 version = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_version:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &version_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRModifyWorkReportRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRModifyWorkReportRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // optional int32 version = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRModifyWorkReportRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // optional int32 version = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRModifyWorkReportRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRModifyWorkReportRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRModifyWorkReportRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRModifyWorkReportRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRModifyWorkReportRsp::MergeFrom(const PB_WRModifyWorkReportRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRModifyWorkReportRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRModifyWorkReportRsp::CopyFrom(const PB_WRModifyWorkReportRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRModifyWorkReportRsp::IsInitialized() const {
  
  return true;
}

void PB_WRModifyWorkReportRsp::Swap(PB_WRModifyWorkReportRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRModifyWorkReportRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRModifyWorkReportRsp_descriptor_;
  metadata.reflection = PB_WRModifyWorkReportRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_PersonStatistics::kPidFieldNumber;
const int PB_PersonStatistics::kWrdatesFieldNumber;
#endif  // !_MSC_VER

PB_PersonStatistics::PB_PersonStatistics() {
  SharedCtor();
}

void PB_PersonStatistics::InitAsDefaultInstance() {
}

PB_PersonStatistics::PB_PersonStatistics(const PB_PersonStatistics& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_PersonStatistics::SharedCtor() {
  _cached_size_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_PersonStatistics::~PB_PersonStatistics() {
  SharedDtor();
}

void PB_PersonStatistics::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_PersonStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PersonStatistics_descriptor_;
}

const PB_PersonStatistics& PB_PersonStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_PersonStatistics* PB_PersonStatistics::default_instance_ = NULL;

PB_PersonStatistics* PB_PersonStatistics::New() const {
  return new PB_PersonStatistics;
}

void PB_PersonStatistics::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = GOOGLE_LONGLONG(0);
  }
  wrdates_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_PersonStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &pid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_wrdates;
        break;
      }
      
      // repeated int64 wrdates = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wrdates:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_wrdates(value);
        if (input->ExpectTag(16)) goto parse_wrdates;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_PersonStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_PersonStatistics::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 pid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }
  
  // repeated int64 wrdates = 2;
  for (int i = 0; i < this->wrdates_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->wrdates(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_PersonStatistics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 pid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }
  
  // repeated int64 wrdates = 2;
  for (int i = 0; i < this->wrdates_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->wrdates(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_PersonStatistics::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }
    
  }
  // repeated int64 wrdates = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->wrdates_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->wrdates(i));
    }
    total_size += 1 * this->wrdates_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_PersonStatistics::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_PersonStatistics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_PersonStatistics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_PersonStatistics::MergeFrom(const PB_PersonStatistics& from) {
  GOOGLE_CHECK_NE(&from, this);
  wrdates_.MergeFrom(from.wrdates_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_pid(from.pid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_PersonStatistics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PersonStatistics::CopyFrom(const PB_PersonStatistics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PersonStatistics::IsInitialized() const {
  
  return true;
}

void PB_PersonStatistics::Swap(PB_PersonStatistics* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    wrdates_.Swap(&other->wrdates_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_PersonStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PersonStatistics_descriptor_;
  metadata.reflection = PB_PersonStatistics_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeStatisticsReq::kTypeFieldNumber;
const int PB_WRGetManagementPeriodTimeStatisticsReq::kStartDateFieldNumber;
const int PB_WRGetManagementPeriodTimeStatisticsReq::kEndDateFieldNumber;
const int PB_WRGetManagementPeriodTimeStatisticsReq::kCountFieldNumber;
const int PB_WRGetManagementPeriodTimeStatisticsReq::kGidsFieldNumber;
const int PB_WRGetManagementPeriodTimeStatisticsReq::kLocalsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeStatisticsReq::PB_WRGetManagementPeriodTimeStatisticsReq() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeStatisticsReq::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeStatisticsReq::PB_WRGetManagementPeriodTimeStatisticsReq(const PB_WRGetManagementPeriodTimeStatisticsReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeStatisticsReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  start_date_ = GOOGLE_LONGLONG(0);
  end_date_ = GOOGLE_LONGLONG(0);
  count_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeStatisticsReq::~PB_WRGetManagementPeriodTimeStatisticsReq() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeStatisticsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeStatisticsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeStatisticsReq_descriptor_;
}

const PB_WRGetManagementPeriodTimeStatisticsReq& PB_WRGetManagementPeriodTimeStatisticsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeStatisticsReq* PB_WRGetManagementPeriodTimeStatisticsReq::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeStatisticsReq* PB_WRGetManagementPeriodTimeStatisticsReq::New() const {
  return new PB_WRGetManagementPeriodTimeStatisticsReq;
}

void PB_WRGetManagementPeriodTimeStatisticsReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    start_date_ = GOOGLE_LONGLONG(0);
    end_date_ = GOOGLE_LONGLONG(0);
    count_ = GOOGLE_LONGLONG(0);
  }
  gids_.Clear();
  locals_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeStatisticsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_start_date;
        break;
      }
      
      // optional int64 start_date = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_date_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_end_date;
        break;
      }
      
      // optional int64 end_date = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_end_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &end_date_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }
      
      // optional int64 count = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_gids;
        break;
      }
      
      // repeated int64 gids = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_gids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_gids(value);
        if (input->ExpectTag(40)) goto parse_gids;
        if (input->ExpectTag(50)) goto parse_locals;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_PersonStatistics locals = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_locals:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_locals()));
        if (input->ExpectTag(50)) goto parse_locals;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeStatisticsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeStatisticsReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 start_date = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_date(), output);
  }
  
  // optional int64 end_date = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->end_date(), output);
  }
  
  // optional int64 count = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->count(), output);
  }
  
  // repeated int64 gids = 5;
  for (int i = 0; i < this->gids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      5, this->gids(i), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_PersonStatistics locals = 6;
  for (int i = 0; i < this->locals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->locals(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeStatisticsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 start_date = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start_date(), target);
  }
  
  // optional int64 end_date = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->end_date(), target);
  }
  
  // optional int64 count = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->count(), target);
  }
  
  // repeated int64 gids = 5;
  for (int i = 0; i < this->gids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(5, this->gids(i), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_PersonStatistics locals = 6;
  for (int i = 0; i < this->locals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->locals(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeStatisticsReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 start_date = 2;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_date());
    }
    
    // optional int64 end_date = 3;
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_date());
    }
    
    // optional int64 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
  }
  // repeated int64 gids = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->gids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->gids(i));
    }
    total_size += 1 * this->gids_size() + data_size;
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_PersonStatistics locals = 6;
  total_size += 1 * this->locals_size();
  for (int i = 0; i < this->locals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locals(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeStatisticsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeStatisticsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeStatisticsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeStatisticsReq::MergeFrom(const PB_WRGetManagementPeriodTimeStatisticsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  gids_.MergeFrom(from.gids_);
  locals_.MergeFrom(from.locals_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_start_date(from.start_date());
    }
    if (from._has_bit(2)) {
      set_end_date(from.end_date());
    }
    if (from._has_bit(3)) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeStatisticsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeStatisticsReq::CopyFrom(const PB_WRGetManagementPeriodTimeStatisticsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeStatisticsReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeStatisticsReq::Swap(PB_WRGetManagementPeriodTimeStatisticsReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(start_date_, other->start_date_);
    std::swap(end_date_, other->end_date_);
    std::swap(count_, other->count_);
    gids_.Swap(&other->gids_);
    locals_.Swap(&other->locals_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeStatisticsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeStatisticsReq_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeStatisticsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeStatisticsRsp::kResultFieldNumber;
const int PB_WRGetManagementPeriodTimeStatisticsRsp::kTotalWorkreportsFieldNumber;
const int PB_WRGetManagementPeriodTimeStatisticsRsp::kTotalPersonFieldNumber;
const int PB_WRGetManagementPeriodTimeStatisticsRsp::kPersonStatisticsesFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeStatisticsRsp::PB_WRGetManagementPeriodTimeStatisticsRsp() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeStatisticsRsp::PB_WRGetManagementPeriodTimeStatisticsRsp(const PB_WRGetManagementPeriodTimeStatisticsRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  total_workreports_ = GOOGLE_LONGLONG(0);
  total_person_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeStatisticsRsp::~PB_WRGetManagementPeriodTimeStatisticsRsp() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeStatisticsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeStatisticsRsp_descriptor_;
}

const PB_WRGetManagementPeriodTimeStatisticsRsp& PB_WRGetManagementPeriodTimeStatisticsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeStatisticsRsp* PB_WRGetManagementPeriodTimeStatisticsRsp::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeStatisticsRsp* PB_WRGetManagementPeriodTimeStatisticsRsp::New() const {
  return new PB_WRGetManagementPeriodTimeStatisticsRsp;
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    total_workreports_ = GOOGLE_LONGLONG(0);
    total_person_ = GOOGLE_LONGLONG(0);
  }
  person_statisticses_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeStatisticsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_total_workreports;
        break;
      }
      
      // optional int64 total_workreports = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_total_workreports:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &total_workreports_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_total_person;
        break;
      }
      
      // optional int64 total_person = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_total_person:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &total_person_));
        _set_bit(2);
        if (input->ExpectTag(34)) goto parse_person_statisticses;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_PersonStatistics person_statisticses = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_person_statisticses:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_person_statisticses()));
        if (input->ExpectTag(34)) goto parse_person_statisticses;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeStatisticsRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // optional int64 total_workreports = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->total_workreports(), output);
  }
  
  // optional int64 total_person = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->total_person(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_PersonStatistics person_statisticses = 4;
  for (int i = 0; i < this->person_statisticses_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->person_statisticses(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeStatisticsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // optional int64 total_workreports = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->total_workreports(), target);
  }
  
  // optional int64 total_person = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->total_person(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_PersonStatistics person_statisticses = 4;
  for (int i = 0; i < this->person_statisticses_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->person_statisticses(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeStatisticsRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int64 total_workreports = 2;
    if (has_total_workreports()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total_workreports());
    }
    
    // optional int64 total_person = 3;
    if (has_total_person()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total_person());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_PersonStatistics person_statisticses = 4;
  total_size += 1 * this->person_statisticses_size();
  for (int i = 0; i < this->person_statisticses_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->person_statisticses(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeStatisticsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeStatisticsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::MergeFrom(const PB_WRGetManagementPeriodTimeStatisticsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  person_statisticses_.MergeFrom(from.person_statisticses_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      set_total_workreports(from.total_workreports());
    }
    if (from._has_bit(2)) {
      set_total_person(from.total_person());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::CopyFrom(const PB_WRGetManagementPeriodTimeStatisticsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeStatisticsRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeStatisticsRsp::Swap(PB_WRGetManagementPeriodTimeStatisticsRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(total_workreports_, other->total_workreports_);
    std::swap(total_person_, other->total_person_);
    person_statisticses_.Swap(&other->person_statisticses_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeStatisticsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeStatisticsRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeStatisticsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::kTypeFieldNumber;
const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::kStartDateFieldNumber;
const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::kEndDateFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  start_date_ = GOOGLE_LONGLONG(0);
  end_date_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::~PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_descriptor_;
}

const PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq& PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq* PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq* PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::New() const {
  return new PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    start_date_ = GOOGLE_LONGLONG(0);
    end_date_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_start_date;
        break;
      }
      
      // optional int64 start_date = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_date_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_end_date;
        break;
      }
      
      // optional int64 end_date = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_end_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &end_date_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 start_date = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_date(), output);
  }
  
  // optional int64 end_date = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->end_date(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 start_date = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start_date(), target);
  }
  
  // optional int64 end_date = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->end_date(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 start_date = 2;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_date());
    }
    
    // optional int64 end_date = 3;
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_date());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::MergeFrom(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_start_date(from.start_date());
    }
    if (from._has_bit(2)) {
      set_end_date(from.end_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::CopyFrom(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::Swap(PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(start_date_, other->start_date_);
    std::swap(end_date_, other->end_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeGroupWorkReportsNumReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::kGidFieldNumber;
const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::kCountFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::SharedCtor() {
  _cached_size_ = 0;
  gid_ = GOOGLE_LONGLONG(0);
  count_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::~PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_;
}

const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic& PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::New() const {
  return new PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gid_ = GOOGLE_LONGLONG(0);
    count_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 gid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &gid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }
      
      // optional int64 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 gid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->gid(), output);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 gid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->gid(), target);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 gid = 1;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gid());
    }
    
    // optional int64 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::MergeFrom(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_gid(from.gid());
    }
    if (from._has_bit(1)) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::CopyFrom(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::Swap(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic* other) {
  if (other != this) {
    std::swap(gid_, other->gid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_PB_GroupStatic_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::kResultFieldNumber;
const int PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::kGroupStatsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::~PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_descriptor_;
}

const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp& PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::New() const {
  return new PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  group_stats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_group_stats;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp.PB_GroupStatic group_stats = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_group_stats:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_group_stats()));
        if (input->ExpectTag(18)) goto parse_group_stats;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp.PB_GroupStatic group_stats = 2;
  for (int i = 0; i < this->group_stats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->group_stats(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp.PB_GroupStatic group_stats = 2;
  for (int i = 0; i < this->group_stats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->group_stats(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp.PB_GroupStatic group_stats = 2;
  total_size += 1 * this->group_stats_size();
  for (int i = 0; i < this->group_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->group_stats(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::MergeFrom(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  group_stats_.MergeFrom(from.group_stats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::CopyFrom(const PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::Swap(PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    group_stats_.Swap(&other->group_stats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeGroupWorkReportsNumRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsStatisticsReq::kTypeFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsReq::kWrdateFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsStatisticsReq::PB_WRGetManagementGroupWorkReportsStatisticsReq() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsStatisticsReq::PB_WRGetManagementGroupWorkReportsStatisticsReq(const PB_WRGetManagementGroupWorkReportsStatisticsReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  wrdate_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsStatisticsReq::~PB_WRGetManagementGroupWorkReportsStatisticsReq() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsStatisticsReq_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsStatisticsReq& PB_WRGetManagementGroupWorkReportsStatisticsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsStatisticsReq* PB_WRGetManagementGroupWorkReportsStatisticsReq::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsStatisticsReq* PB_WRGetManagementGroupWorkReportsStatisticsReq::New() const {
  return new PB_WRGetManagementGroupWorkReportsStatisticsReq;
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    wrdate_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsStatisticsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_wrdate;
        break;
      }
      
      // optional int64 wrdate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wrdate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &wrdate_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsStatisticsReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 wrdate = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->wrdate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsStatisticsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 wrdate = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->wrdate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsStatisticsReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 wrdate = 2;
    if (has_wrdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wrdate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsStatisticsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsStatisticsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::MergeFrom(const PB_WRGetManagementGroupWorkReportsStatisticsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_wrdate(from.wrdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::CopyFrom(const PB_WRGetManagementGroupWorkReportsStatisticsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsStatisticsReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsStatisticsReq::Swap(PB_WRGetManagementGroupWorkReportsStatisticsReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(wrdate_, other->wrdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsStatisticsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsStatisticsReq_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsStatisticsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::kGidFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::kSubmitPersonCountFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::kUnsubmitPersonCountFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::kPidsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics(const PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::SharedCtor() {
  _cached_size_ = 0;
  gid_ = GOOGLE_LONGLONG(0);
  submit_person_count_ = GOOGLE_LONGLONG(0);
  unsubmit_person_count_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::~PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics& PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics* PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics* PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::New() const {
  return new PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics;
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gid_ = GOOGLE_LONGLONG(0);
    submit_person_count_ = GOOGLE_LONGLONG(0);
    unsubmit_person_count_ = GOOGLE_LONGLONG(0);
  }
  pids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 gid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &gid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_submit_person_count;
        break;
      }
      
      // optional int64 submit_person_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_submit_person_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &submit_person_count_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_unsubmit_person_count;
        break;
      }
      
      // optional int64 unsubmit_person_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_unsubmit_person_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &unsubmit_person_count_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_pids;
        break;
      }
      
      // repeated int64 pids = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_pids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_pids(value);
        if (input->ExpectTag(32)) goto parse_pids;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 gid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->gid(), output);
  }
  
  // optional int64 submit_person_count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->submit_person_count(), output);
  }
  
  // optional int64 unsubmit_person_count = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->unsubmit_person_count(), output);
  }
  
  // repeated int64 pids = 4;
  for (int i = 0; i < this->pids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->pids(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 gid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->gid(), target);
  }
  
  // optional int64 submit_person_count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->submit_person_count(), target);
  }
  
  // optional int64 unsubmit_person_count = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->unsubmit_person_count(), target);
  }
  
  // repeated int64 pids = 4;
  for (int i = 0; i < this->pids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->pids(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 gid = 1;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gid());
    }
    
    // optional int64 submit_person_count = 2;
    if (has_submit_person_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->submit_person_count());
    }
    
    // optional int64 unsubmit_person_count = 3;
    if (has_unsubmit_person_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->unsubmit_person_count());
    }
    
  }
  // repeated int64 pids = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->pids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->pids(i));
    }
    total_size += 1 * this->pids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::MergeFrom(const PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics& from) {
  GOOGLE_CHECK_NE(&from, this);
  pids_.MergeFrom(from.pids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_gid(from.gid());
    }
    if (from._has_bit(1)) {
      set_submit_person_count(from.submit_person_count());
    }
    if (from._has_bit(2)) {
      set_unsubmit_person_count(from.unsubmit_person_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::CopyFrom(const PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::Swap(PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics* other) {
  if (other != this) {
    std::swap(gid_, other->gid_);
    std::swap(submit_person_count_, other->submit_person_count_);
    std::swap(unsubmit_person_count_, other->unsubmit_person_count_);
    pids_.Swap(&other->pids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsStatisticsRsp_PB_GroupStatistics_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsStatisticsRsp::kResultFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsRsp::kGroupStatisticsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsStatisticsRsp::PB_WRGetManagementGroupWorkReportsStatisticsRsp() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsStatisticsRsp::PB_WRGetManagementGroupWorkReportsStatisticsRsp(const PB_WRGetManagementGroupWorkReportsStatisticsRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsStatisticsRsp::~PB_WRGetManagementGroupWorkReportsStatisticsRsp() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsStatisticsRsp_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsStatisticsRsp& PB_WRGetManagementGroupWorkReportsStatisticsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsStatisticsRsp* PB_WRGetManagementGroupWorkReportsStatisticsRsp::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsStatisticsRsp* PB_WRGetManagementGroupWorkReportsStatisticsRsp::New() const {
  return new PB_WRGetManagementGroupWorkReportsStatisticsRsp;
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  group_statistics_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsStatisticsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_group_statistics;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsStatisticsRsp.PB_GroupStatistics group_statistics = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_group_statistics:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_group_statistics()));
        if (input->ExpectTag(18)) goto parse_group_statistics;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsStatisticsRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsStatisticsRsp.PB_GroupStatistics group_statistics = 2;
  for (int i = 0; i < this->group_statistics_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->group_statistics(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsStatisticsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsStatisticsRsp.PB_GroupStatistics group_statistics = 2;
  for (int i = 0; i < this->group_statistics_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->group_statistics(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsStatisticsRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsStatisticsRsp.PB_GroupStatistics group_statistics = 2;
  total_size += 1 * this->group_statistics_size();
  for (int i = 0; i < this->group_statistics_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->group_statistics(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsStatisticsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsStatisticsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::MergeFrom(const PB_WRGetManagementGroupWorkReportsStatisticsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  group_statistics_.MergeFrom(from.group_statistics_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::CopyFrom(const PB_WRGetManagementGroupWorkReportsStatisticsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsStatisticsRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsStatisticsRsp::Swap(PB_WRGetManagementGroupWorkReportsStatisticsRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    group_statistics_.Swap(&other->group_statistics_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsStatisticsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsStatisticsRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsStatisticsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::kTypeFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::kWrdateFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::kSubmitTypeFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::kGidsFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::kCountFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::kLocalPidsFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::kSkipFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::kPidsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::PB_WRGetManagementGroupWorkReportsStatisticsDetailReq() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::PB_WRGetManagementGroupWorkReportsStatisticsDetailReq(const PB_WRGetManagementGroupWorkReportsStatisticsDetailReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  wrdate_ = GOOGLE_LONGLONG(0);
  submit_type_ = 0;
  count_ = GOOGLE_LONGLONG(0);
  skip_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::~PB_WRGetManagementGroupWorkReportsStatisticsDetailReq() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsStatisticsDetailReq& PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailReq* PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsStatisticsDetailReq* PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::New() const {
  return new PB_WRGetManagementGroupWorkReportsStatisticsDetailReq;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    wrdate_ = GOOGLE_LONGLONG(0);
    submit_type_ = 0;
    count_ = GOOGLE_LONGLONG(0);
    skip_ = GOOGLE_LONGLONG(0);
  }
  gids_.Clear();
  local_pids_.Clear();
  pids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_wrdate;
        break;
      }
      
      // optional int64 wrdate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wrdate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &wrdate_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_submit_type;
        break;
      }
      
      // optional int32 submit_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_submit_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &submit_type_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_gids;
        break;
      }
      
      // repeated int64 gids = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_gids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_gids(value);
        if (input->ExpectTag(32)) goto parse_gids;
        if (input->ExpectTag(40)) goto parse_count;
        break;
      }
      
      // optional int64 count = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_local_pids;
        break;
      }
      
      // repeated int64 local_pids = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_local_pids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_local_pids(value);
        if (input->ExpectTag(48)) goto parse_local_pids;
        if (input->ExpectTag(56)) goto parse_skip;
        break;
      }
      
      // optional int64 skip = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_skip:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &skip_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_pids;
        break;
      }
      
      // repeated int64 pids = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_pids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_pids(value);
        if (input->ExpectTag(64)) goto parse_pids;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 wrdate = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->wrdate(), output);
  }
  
  // optional int32 submit_type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->submit_type(), output);
  }
  
  // repeated int64 gids = 4;
  for (int i = 0; i < this->gids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->gids(i), output);
  }
  
  // optional int64 count = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->count(), output);
  }
  
  // repeated int64 local_pids = 6;
  for (int i = 0; i < this->local_pids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      6, this->local_pids(i), output);
  }
  
  // optional int64 skip = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->skip(), output);
  }
  
  // repeated int64 pids = 8;
  for (int i = 0; i < this->pids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      8, this->pids(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 wrdate = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->wrdate(), target);
  }
  
  // optional int32 submit_type = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->submit_type(), target);
  }
  
  // repeated int64 gids = 4;
  for (int i = 0; i < this->gids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->gids(i), target);
  }
  
  // optional int64 count = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->count(), target);
  }
  
  // repeated int64 local_pids = 6;
  for (int i = 0; i < this->local_pids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(6, this->local_pids(i), target);
  }
  
  // optional int64 skip = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->skip(), target);
  }
  
  // repeated int64 pids = 8;
  for (int i = 0; i < this->pids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(8, this->pids(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 wrdate = 2;
    if (has_wrdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wrdate());
    }
    
    // optional int32 submit_type = 3;
    if (has_submit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->submit_type());
    }
    
    // optional int64 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
    // optional int64 skip = 7;
    if (has_skip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->skip());
    }
    
  }
  // repeated int64 gids = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->gids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->gids(i));
    }
    total_size += 1 * this->gids_size() + data_size;
  }
  
  // repeated int64 local_pids = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->local_pids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->local_pids(i));
    }
    total_size += 1 * this->local_pids_size() + data_size;
  }
  
  // repeated int64 pids = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->pids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->pids(i));
    }
    total_size += 1 * this->pids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsStatisticsDetailReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsStatisticsDetailReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::MergeFrom(const PB_WRGetManagementGroupWorkReportsStatisticsDetailReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  gids_.MergeFrom(from.gids_);
  local_pids_.MergeFrom(from.local_pids_);
  pids_.MergeFrom(from.pids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_wrdate(from.wrdate());
    }
    if (from._has_bit(2)) {
      set_submit_type(from.submit_type());
    }
    if (from._has_bit(4)) {
      set_count(from.count());
    }
    if (from._has_bit(6)) {
      set_skip(from.skip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::CopyFrom(const PB_WRGetManagementGroupWorkReportsStatisticsDetailReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::Swap(PB_WRGetManagementGroupWorkReportsStatisticsDetailReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(wrdate_, other->wrdate_);
    std::swap(submit_type_, other->submit_type_);
    gids_.Swap(&other->gids_);
    std::swap(count_, other->count_);
    local_pids_.Swap(&other->local_pids_);
    std::swap(skip_, other->skip_);
    pids_.Swap(&other->pids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsStatisticsDetailReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsStatisticsDetailReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_PersonWrCreateTime::kPidFieldNumber;
const int PB_PersonWrCreateTime::kCreateTimeFieldNumber;
#endif  // !_MSC_VER

PB_PersonWrCreateTime::PB_PersonWrCreateTime() {
  SharedCtor();
}

void PB_PersonWrCreateTime::InitAsDefaultInstance() {
}

PB_PersonWrCreateTime::PB_PersonWrCreateTime(const PB_PersonWrCreateTime& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_PersonWrCreateTime::SharedCtor() {
  _cached_size_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_PersonWrCreateTime::~PB_PersonWrCreateTime() {
  SharedDtor();
}

void PB_PersonWrCreateTime::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_PersonWrCreateTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PersonWrCreateTime_descriptor_;
}

const PB_PersonWrCreateTime& PB_PersonWrCreateTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_PersonWrCreateTime* PB_PersonWrCreateTime::default_instance_ = NULL;

PB_PersonWrCreateTime* PB_PersonWrCreateTime::New() const {
  return new PB_PersonWrCreateTime;
}

void PB_PersonWrCreateTime::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = GOOGLE_LONGLONG(0);
  }
  create_time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_PersonWrCreateTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &pid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_create_time;
        break;
      }
      
      // repeated int64 create_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_create_time:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_create_time(value);
        if (input->ExpectTag(16)) goto parse_create_time;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_PersonWrCreateTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_PersonWrCreateTime::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 pid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }
  
  // repeated int64 create_time = 2;
  for (int i = 0; i < this->create_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->create_time(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_PersonWrCreateTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 pid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }
  
  // repeated int64 create_time = 2;
  for (int i = 0; i < this->create_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->create_time(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_PersonWrCreateTime::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }
    
  }
  // repeated int64 create_time = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->create_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->create_time(i));
    }
    total_size += 1 * this->create_time_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_PersonWrCreateTime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_PersonWrCreateTime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_PersonWrCreateTime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_PersonWrCreateTime::MergeFrom(const PB_PersonWrCreateTime& from) {
  GOOGLE_CHECK_NE(&from, this);
  create_time_.MergeFrom(from.create_time_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_pid(from.pid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_PersonWrCreateTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PersonWrCreateTime::CopyFrom(const PB_PersonWrCreateTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PersonWrCreateTime::IsInitialized() const {
  
  return true;
}

void PB_PersonWrCreateTime::Swap(PB_PersonWrCreateTime* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    create_time_.Swap(&other->create_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_PersonWrCreateTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PersonWrCreateTime_descriptor_;
  metadata.reflection = PB_PersonWrCreateTime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::kGidFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::kPidsFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::kPidWrCreateTimesFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson(const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::SharedCtor() {
  _cached_size_ = 0;
  gid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::~PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson& PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::New() const {
  return new PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gid_ = GOOGLE_LONGLONG(0);
  }
  pids_.Clear();
  pid_wr_create_times_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 gid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &gid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_pids;
        break;
      }
      
      // repeated int64 pids = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_pids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_pids(value);
        if (input->ExpectTag(16)) goto parse_pids;
        if (input->ExpectTag(26)) goto parse_pid_wr_create_times;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_PersonWrCreateTime pid_wr_create_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_pid_wr_create_times:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_pid_wr_create_times()));
        if (input->ExpectTag(26)) goto parse_pid_wr_create_times;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 gid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->gid(), output);
  }
  
  // repeated int64 pids = 2;
  for (int i = 0; i < this->pids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->pids(i), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_PersonWrCreateTime pid_wr_create_times = 3;
  for (int i = 0; i < this->pid_wr_create_times_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->pid_wr_create_times(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 gid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->gid(), target);
  }
  
  // repeated int64 pids = 2;
  for (int i = 0; i < this->pids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->pids(i), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_PersonWrCreateTime pid_wr_create_times = 3;
  for (int i = 0; i < this->pid_wr_create_times_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->pid_wr_create_times(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 gid = 1;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gid());
    }
    
  }
  // repeated int64 pids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->pids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->pids(i));
    }
    total_size += 1 * this->pids_size() + data_size;
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_PersonWrCreateTime pid_wr_create_times = 3;
  total_size += 1 * this->pid_wr_create_times_size();
  for (int i = 0; i < this->pid_wr_create_times_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pid_wr_create_times(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::MergeFrom(const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson& from) {
  GOOGLE_CHECK_NE(&from, this);
  pids_.MergeFrom(from.pids_);
  pid_wr_create_times_.MergeFrom(from.pid_wr_create_times_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_gid(from.gid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::CopyFrom(const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::Swap(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson* other) {
  if (other != this) {
    std::swap(gid_, other->gid_);
    pids_.Swap(&other->pids_);
    pid_wr_create_times_.Swap(&other->pid_wr_create_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_PB_GroupPerson_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::kResultFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::kPgpsFieldNumber;
const int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::kTotalPersonFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp() {
  SharedCtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp(const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  total_person_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::~PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp() {
  SharedDtor();
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_descriptor_;
}

const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp& PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::default_instance_ = NULL;

PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::New() const {
  return new PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    total_person_ = GOOGLE_LONGLONG(0);
  }
  pgps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_pgps;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp.PB_GroupPerson pgps = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_pgps:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_pgps()));
        if (input->ExpectTag(18)) goto parse_pgps;
        if (input->ExpectTag(24)) goto parse_total_person;
        break;
      }
      
      // optional int64 total_person = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_total_person:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &total_person_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp.PB_GroupPerson pgps = 2;
  for (int i = 0; i < this->pgps_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->pgps(i), output);
  }
  
  // optional int64 total_person = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->total_person(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp.PB_GroupPerson pgps = 2;
  for (int i = 0; i < this->pgps_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pgps(i), target);
  }
  
  // optional int64 total_person = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->total_person(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int64 total_person = 3;
    if (has_total_person()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total_person());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp.PB_GroupPerson pgps = 2;
  total_size += 1 * this->pgps_size();
  for (int i = 0; i < this->pgps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pgps(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::MergeFrom(const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  pgps_.MergeFrom(from.pgps_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(2)) {
      set_total_person(from.total_person());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::CopyFrom(const PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::Swap(PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    pgps_.Swap(&other->pgps_);
    std::swap(total_person_, other->total_person_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementGroupWorkReportsStatisticsDetailRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeDateReq::kPidFieldNumber;
const int PB_WRGetManagementPeriodTimeDateReq::kTypeFieldNumber;
const int PB_WRGetManagementPeriodTimeDateReq::kStartDateFieldNumber;
const int PB_WRGetManagementPeriodTimeDateReq::kEndDateFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeDateReq::PB_WRGetManagementPeriodTimeDateReq() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeDateReq::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeDateReq::PB_WRGetManagementPeriodTimeDateReq(const PB_WRGetManagementPeriodTimeDateReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeDateReq::SharedCtor() {
  _cached_size_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  start_date_ = GOOGLE_LONGLONG(0);
  end_date_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeDateReq::~PB_WRGetManagementPeriodTimeDateReq() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeDateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeDateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeDateReq_descriptor_;
}

const PB_WRGetManagementPeriodTimeDateReq& PB_WRGetManagementPeriodTimeDateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeDateReq* PB_WRGetManagementPeriodTimeDateReq::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeDateReq* PB_WRGetManagementPeriodTimeDateReq::New() const {
  return new PB_WRGetManagementPeriodTimeDateReq;
}

void PB_WRGetManagementPeriodTimeDateReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    start_date_ = GOOGLE_LONGLONG(0);
    end_date_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeDateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &pid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_start_date;
        break;
      }
      
      // optional int64 start_date = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_date_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_end_date;
        break;
      }
      
      // optional int64 end_date = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_end_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &end_date_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeDateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeDateReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 pid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }
  
  // optional int32 type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int64 start_date = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_date(), output);
  }
  
  // optional int64 end_date = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->end_date(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeDateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 pid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }
  
  // optional int32 type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int64 start_date = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_date(), target);
  }
  
  // optional int64 end_date = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->end_date(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeDateReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 start_date = 3;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_date());
    }
    
    // optional int64 end_date = 4;
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_date());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeDateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeDateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeDateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeDateReq::MergeFrom(const PB_WRGetManagementPeriodTimeDateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_pid(from.pid());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
    if (from._has_bit(2)) {
      set_start_date(from.start_date());
    }
    if (from._has_bit(3)) {
      set_end_date(from.end_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeDateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeDateReq::CopyFrom(const PB_WRGetManagementPeriodTimeDateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeDateReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeDateReq::Swap(PB_WRGetManagementPeriodTimeDateReq* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    std::swap(type_, other->type_);
    std::swap(start_date_, other->start_date_);
    std::swap(end_date_, other->end_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeDateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeDateReq_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeDateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeDateRsp::kResultFieldNumber;
const int PB_WRGetManagementPeriodTimeDateRsp::kWrdatesFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeDateRsp::PB_WRGetManagementPeriodTimeDateRsp() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeDateRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeDateRsp::PB_WRGetManagementPeriodTimeDateRsp(const PB_WRGetManagementPeriodTimeDateRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeDateRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeDateRsp::~PB_WRGetManagementPeriodTimeDateRsp() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeDateRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeDateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeDateRsp_descriptor_;
}

const PB_WRGetManagementPeriodTimeDateRsp& PB_WRGetManagementPeriodTimeDateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeDateRsp* PB_WRGetManagementPeriodTimeDateRsp::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeDateRsp* PB_WRGetManagementPeriodTimeDateRsp::New() const {
  return new PB_WRGetManagementPeriodTimeDateRsp;
}

void PB_WRGetManagementPeriodTimeDateRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  wrdates_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeDateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_wrdates;
        break;
      }
      
      // repeated int64 wrdates = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_wrdates:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_wrdates(value);
        if (input->ExpectTag(16)) goto parse_wrdates;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeDateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeDateRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated int64 wrdates = 2;
  for (int i = 0; i < this->wrdates_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->wrdates(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeDateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated int64 wrdates = 2;
  for (int i = 0; i < this->wrdates_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->wrdates(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeDateRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated int64 wrdates = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->wrdates_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->wrdates(i));
    }
    total_size += 1 * this->wrdates_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeDateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeDateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeDateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeDateRsp::MergeFrom(const PB_WRGetManagementPeriodTimeDateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  wrdates_.MergeFrom(from.wrdates_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeDateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeDateRsp::CopyFrom(const PB_WRGetManagementPeriodTimeDateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeDateRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeDateRsp::Swap(PB_WRGetManagementPeriodTimeDateRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    wrdates_.Swap(&other->wrdates_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeDateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeDateRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeDateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeWorkReportsReq::kPidFieldNumber;
const int PB_WRGetManagementPeriodTimeWorkReportsReq::kTypeFieldNumber;
const int PB_WRGetManagementPeriodTimeWorkReportsReq::kStartDateFieldNumber;
const int PB_WRGetManagementPeriodTimeWorkReportsReq::kEndDateFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeWorkReportsReq::PB_WRGetManagementPeriodTimeWorkReportsReq() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeWorkReportsReq::PB_WRGetManagementPeriodTimeWorkReportsReq(const PB_WRGetManagementPeriodTimeWorkReportsReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::SharedCtor() {
  _cached_size_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  start_date_ = GOOGLE_LONGLONG(0);
  end_date_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeWorkReportsReq::~PB_WRGetManagementPeriodTimeWorkReportsReq() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeWorkReportsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeWorkReportsReq_descriptor_;
}

const PB_WRGetManagementPeriodTimeWorkReportsReq& PB_WRGetManagementPeriodTimeWorkReportsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeWorkReportsReq* PB_WRGetManagementPeriodTimeWorkReportsReq::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeWorkReportsReq* PB_WRGetManagementPeriodTimeWorkReportsReq::New() const {
  return new PB_WRGetManagementPeriodTimeWorkReportsReq;
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    start_date_ = GOOGLE_LONGLONG(0);
    end_date_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeWorkReportsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &pid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_start_date;
        break;
      }
      
      // optional int64 start_date = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_date_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_end_date;
        break;
      }
      
      // optional int64 end_date = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_end_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &end_date_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeWorkReportsReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 pid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }
  
  // optional int32 type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int64 start_date = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_date(), output);
  }
  
  // optional int64 end_date = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->end_date(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeWorkReportsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 pid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }
  
  // optional int32 type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int64 start_date = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_date(), target);
  }
  
  // optional int64 end_date = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->end_date(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeWorkReportsReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 start_date = 3;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_date());
    }
    
    // optional int64 end_date = 4;
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_date());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeWorkReportsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeWorkReportsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::MergeFrom(const PB_WRGetManagementPeriodTimeWorkReportsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_pid(from.pid());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
    if (from._has_bit(2)) {
      set_start_date(from.start_date());
    }
    if (from._has_bit(3)) {
      set_end_date(from.end_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::CopyFrom(const PB_WRGetManagementPeriodTimeWorkReportsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeWorkReportsReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeWorkReportsReq::Swap(PB_WRGetManagementPeriodTimeWorkReportsReq* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    std::swap(type_, other->type_);
    std::swap(start_date_, other->start_date_);
    std::swap(end_date_, other->end_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeWorkReportsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeWorkReportsReq_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeWorkReportsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetManagementPeriodTimeWorkReportsRsp::kResultFieldNumber;
const int PB_WRGetManagementPeriodTimeWorkReportsRsp::kWorkreportsFieldNumber;
#endif  // !_MSC_VER

PB_WRGetManagementPeriodTimeWorkReportsRsp::PB_WRGetManagementPeriodTimeWorkReportsRsp() {
  SharedCtor();
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::InitAsDefaultInstance() {
}

PB_WRGetManagementPeriodTimeWorkReportsRsp::PB_WRGetManagementPeriodTimeWorkReportsRsp(const PB_WRGetManagementPeriodTimeWorkReportsRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetManagementPeriodTimeWorkReportsRsp::~PB_WRGetManagementPeriodTimeWorkReportsRsp() {
  SharedDtor();
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetManagementPeriodTimeWorkReportsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetManagementPeriodTimeWorkReportsRsp_descriptor_;
}

const PB_WRGetManagementPeriodTimeWorkReportsRsp& PB_WRGetManagementPeriodTimeWorkReportsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetManagementPeriodTimeWorkReportsRsp* PB_WRGetManagementPeriodTimeWorkReportsRsp::default_instance_ = NULL;

PB_WRGetManagementPeriodTimeWorkReportsRsp* PB_WRGetManagementPeriodTimeWorkReportsRsp::New() const {
  return new PB_WRGetManagementPeriodTimeWorkReportsRsp;
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  workreports_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetManagementPeriodTimeWorkReportsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_workreports;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_workreports:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_workreports()));
        if (input->ExpectTag(18)) goto parse_workreports;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetManagementPeriodTimeWorkReportsRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->workreports(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetManagementPeriodTimeWorkReportsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->workreports(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetManagementPeriodTimeWorkReportsRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  total_size += 1 * this->workreports_size();
  for (int i = 0; i < this->workreports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->workreports(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetManagementPeriodTimeWorkReportsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetManagementPeriodTimeWorkReportsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::MergeFrom(const PB_WRGetManagementPeriodTimeWorkReportsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  workreports_.MergeFrom(from.workreports_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::CopyFrom(const PB_WRGetManagementPeriodTimeWorkReportsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetManagementPeriodTimeWorkReportsRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetManagementPeriodTimeWorkReportsRsp::Swap(PB_WRGetManagementPeriodTimeWorkReportsRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    workreports_.Swap(&other->workreports_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetManagementPeriodTimeWorkReportsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetManagementPeriodTimeWorkReportsRsp_descriptor_;
  metadata.reflection = PB_WRGetManagementPeriodTimeWorkReportsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_FormModel::kDoingFieldNumber;
const int PB_FormModel::kDidFieldNumber;
const int PB_FormModel::kTypeFieldNumber;
const int PB_FormModel::kVersionFieldNumber;
const int PB_FormModel::kFormModelContentsFieldNumber;
#endif  // !_MSC_VER

PB_FormModel::PB_FormModel() {
  SharedCtor();
}

void PB_FormModel::InitAsDefaultInstance() {
}

PB_FormModel::PB_FormModel(const PB_FormModel& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_FormModel::SharedCtor() {
  _cached_size_ = 0;
  doing_ = GOOGLE_LONGLONG(0);
  did_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_FormModel::~PB_FormModel() {
  SharedDtor();
}

void PB_FormModel::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_FormModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_FormModel_descriptor_;
}

const PB_FormModel& PB_FormModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_FormModel* PB_FormModel::default_instance_ = NULL;

PB_FormModel* PB_FormModel::New() const {
  return new PB_FormModel;
}

void PB_FormModel::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    doing_ = GOOGLE_LONGLONG(0);
    did_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    version_ = 0;
  }
  form_model_contents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_FormModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 doing = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &doing_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_did;
        break;
      }
      
      // optional int64 did = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_did:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &did_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_version;
        break;
      }
      
      // optional int32 version = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_version:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &version_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_form_model_contents;
        break;
      }
      
      // repeated string form_model_contents = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_form_model_contents:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_form_model_contents()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->form_model_contents(0).data(), this->form_model_contents(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(42)) goto parse_form_model_contents;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_FormModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_FormModel::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 doing = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->doing(), output);
  }
  
  // optional int64 did = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->did(), output);
  }
  
  // optional int32 type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  // optional int32 version = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->version(), output);
  }
  
  // repeated string form_model_contents = 5;
  for (int i = 0; i < this->form_model_contents_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->form_model_contents(i).data(), this->form_model_contents(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->form_model_contents(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_FormModel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 doing = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->doing(), target);
  }
  
  // optional int64 did = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->did(), target);
  }
  
  // optional int32 type = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  // optional int32 version = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->version(), target);
  }
  
  // repeated string form_model_contents = 5;
  for (int i = 0; i < this->form_model_contents_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->form_model_contents(i).data(), this->form_model_contents(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->form_model_contents(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_FormModel::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 doing = 1;
    if (has_doing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->doing());
    }
    
    // optional int64 did = 2;
    if (has_did()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->did());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 version = 4;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }
    
  }
  // repeated string form_model_contents = 5;
  total_size += 1 * this->form_model_contents_size();
  for (int i = 0; i < this->form_model_contents_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->form_model_contents(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_FormModel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_FormModel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_FormModel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_FormModel::MergeFrom(const PB_FormModel& from) {
  GOOGLE_CHECK_NE(&from, this);
  form_model_contents_.MergeFrom(from.form_model_contents_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_doing(from.doing());
    }
    if (from._has_bit(1)) {
      set_did(from.did());
    }
    if (from._has_bit(2)) {
      set_type(from.type());
    }
    if (from._has_bit(3)) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_FormModel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_FormModel::CopyFrom(const PB_FormModel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FormModel::IsInitialized() const {
  
  return true;
}

void PB_FormModel::Swap(PB_FormModel* other) {
  if (other != this) {
    std::swap(doing_, other->doing_);
    std::swap(did_, other->did_);
    std::swap(type_, other->type_);
    std::swap(version_, other->version_);
    form_model_contents_.Swap(&other->form_model_contents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_FormModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_FormModel_descriptor_;
  metadata.reflection = PB_FormModel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRSetFormModelReq::kFormModelFieldNumber;
#endif  // !_MSC_VER

PB_WRSetFormModelReq::PB_WRSetFormModelReq() {
  SharedCtor();
}

void PB_WRSetFormModelReq::InitAsDefaultInstance() {
  form_model_ = const_cast< ::com::sangfor::moa::protobuf::PB_FormModel*>(&::com::sangfor::moa::protobuf::PB_FormModel::default_instance());
}

PB_WRSetFormModelReq::PB_WRSetFormModelReq(const PB_WRSetFormModelReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRSetFormModelReq::SharedCtor() {
  _cached_size_ = 0;
  form_model_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRSetFormModelReq::~PB_WRSetFormModelReq() {
  SharedDtor();
}

void PB_WRSetFormModelReq::SharedDtor() {
  if (this != default_instance_) {
    delete form_model_;
  }
}

const ::google::protobuf::Descriptor* PB_WRSetFormModelReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRSetFormModelReq_descriptor_;
}

const PB_WRSetFormModelReq& PB_WRSetFormModelReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRSetFormModelReq* PB_WRSetFormModelReq::default_instance_ = NULL;

PB_WRSetFormModelReq* PB_WRSetFormModelReq::New() const {
  return new PB_WRSetFormModelReq;
}

void PB_WRSetFormModelReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (form_model_ != NULL) form_model_->::com::sangfor::moa::protobuf::PB_FormModel::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRSetFormModelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.sangfor.moa.protobuf.PB_FormModel form_model = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_form_model()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRSetFormModelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRSetFormModelReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .com.sangfor.moa.protobuf.PB_FormModel form_model = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->form_model(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRSetFormModelReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.sangfor.moa.protobuf.PB_FormModel form_model = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->form_model(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRSetFormModelReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.sangfor.moa.protobuf.PB_FormModel form_model = 1;
    if (has_form_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->form_model());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRSetFormModelReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRSetFormModelReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRSetFormModelReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRSetFormModelReq::MergeFrom(const PB_WRSetFormModelReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_form_model()->::com::sangfor::moa::protobuf::PB_FormModel::MergeFrom(from.form_model());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRSetFormModelReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRSetFormModelReq::CopyFrom(const PB_WRSetFormModelReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRSetFormModelReq::IsInitialized() const {
  
  return true;
}

void PB_WRSetFormModelReq::Swap(PB_WRSetFormModelReq* other) {
  if (other != this) {
    std::swap(form_model_, other->form_model_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRSetFormModelReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRSetFormModelReq_descriptor_;
  metadata.reflection = PB_WRSetFormModelReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRSetFormModelRsp::kResultFieldNumber;
const int PB_WRSetFormModelRsp::kVersionFieldNumber;
#endif  // !_MSC_VER

PB_WRSetFormModelRsp::PB_WRSetFormModelRsp() {
  SharedCtor();
}

void PB_WRSetFormModelRsp::InitAsDefaultInstance() {
}

PB_WRSetFormModelRsp::PB_WRSetFormModelRsp(const PB_WRSetFormModelRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRSetFormModelRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRSetFormModelRsp::~PB_WRSetFormModelRsp() {
  SharedDtor();
}

void PB_WRSetFormModelRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRSetFormModelRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRSetFormModelRsp_descriptor_;
}

const PB_WRSetFormModelRsp& PB_WRSetFormModelRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRSetFormModelRsp* PB_WRSetFormModelRsp::default_instance_ = NULL;

PB_WRSetFormModelRsp* PB_WRSetFormModelRsp::New() const {
  return new PB_WRSetFormModelRsp;
}

void PB_WRSetFormModelRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    version_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRSetFormModelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }
      
      // optional int32 version = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_version:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &version_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRSetFormModelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRSetFormModelRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // optional int32 version = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRSetFormModelRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // optional int32 version = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRSetFormModelRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRSetFormModelRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRSetFormModelRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRSetFormModelRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRSetFormModelRsp::MergeFrom(const PB_WRSetFormModelRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRSetFormModelRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRSetFormModelRsp::CopyFrom(const PB_WRSetFormModelRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRSetFormModelRsp::IsInitialized() const {
  
  return true;
}

void PB_WRSetFormModelRsp::Swap(PB_WRSetFormModelRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRSetFormModelRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRSetFormModelRsp_descriptor_;
  metadata.reflection = PB_WRSetFormModelRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetFormModelReq::kFormModelFieldNumber;
const int PB_WRGetFormModelReq::kFlagFieldNumber;
#endif  // !_MSC_VER

PB_WRGetFormModelReq::PB_WRGetFormModelReq() {
  SharedCtor();
}

void PB_WRGetFormModelReq::InitAsDefaultInstance() {
}

PB_WRGetFormModelReq::PB_WRGetFormModelReq(const PB_WRGetFormModelReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetFormModelReq::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetFormModelReq::~PB_WRGetFormModelReq() {
  SharedDtor();
}

void PB_WRGetFormModelReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetFormModelReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetFormModelReq_descriptor_;
}

const PB_WRGetFormModelReq& PB_WRGetFormModelReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetFormModelReq* PB_WRGetFormModelReq::default_instance_ = NULL;

PB_WRGetFormModelReq* PB_WRGetFormModelReq::New() const {
  return new PB_WRGetFormModelReq;
}

void PB_WRGetFormModelReq::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    flag_ = 0;
  }
  form_model_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetFormModelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.sangfor.moa.protobuf.PB_FormModel form_model = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_form_model:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_form_model()));
        if (input->ExpectTag(10)) goto parse_form_model;
        if (input->ExpectTag(16)) goto parse_flag;
        break;
      }
      
      // optional int32 flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_flag:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &flag_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetFormModelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetFormModelReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_FormModel form_model = 1;
  for (int i = 0; i < this->form_model_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->form_model(i), output);
  }
  
  // optional int32 flag = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetFormModelReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .com.sangfor.moa.protobuf.PB_FormModel form_model = 1;
  for (int i = 0; i < this->form_model_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->form_model(i), target);
  }
  
  // optional int32 flag = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetFormModelReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 flag = 2;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_FormModel form_model = 1;
  total_size += 1 * this->form_model_size();
  for (int i = 0; i < this->form_model_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->form_model(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetFormModelReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetFormModelReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetFormModelReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetFormModelReq::MergeFrom(const PB_WRGetFormModelReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  form_model_.MergeFrom(from.form_model_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetFormModelReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetFormModelReq::CopyFrom(const PB_WRGetFormModelReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetFormModelReq::IsInitialized() const {
  
  return true;
}

void PB_WRGetFormModelReq::Swap(PB_WRGetFormModelReq* other) {
  if (other != this) {
    form_model_.Swap(&other->form_model_);
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetFormModelReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetFormModelReq_descriptor_;
  metadata.reflection = PB_WRGetFormModelReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRGetFormModelRsp::kResultFieldNumber;
const int PB_WRGetFormModelRsp::kFormModelFieldNumber;
#endif  // !_MSC_VER

PB_WRGetFormModelRsp::PB_WRGetFormModelRsp() {
  SharedCtor();
}

void PB_WRGetFormModelRsp::InitAsDefaultInstance() {
}

PB_WRGetFormModelRsp::PB_WRGetFormModelRsp(const PB_WRGetFormModelRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRGetFormModelRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRGetFormModelRsp::~PB_WRGetFormModelRsp() {
  SharedDtor();
}

void PB_WRGetFormModelRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRGetFormModelRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRGetFormModelRsp_descriptor_;
}

const PB_WRGetFormModelRsp& PB_WRGetFormModelRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRGetFormModelRsp* PB_WRGetFormModelRsp::default_instance_ = NULL;

PB_WRGetFormModelRsp* PB_WRGetFormModelRsp::New() const {
  return new PB_WRGetFormModelRsp;
}

void PB_WRGetFormModelRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  form_model_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRGetFormModelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_form_model;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_FormModel form_model = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_form_model:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_form_model()));
        if (input->ExpectTag(18)) goto parse_form_model;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRGetFormModelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRGetFormModelRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_FormModel form_model = 2;
  for (int i = 0; i < this->form_model_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->form_model(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRGetFormModelRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_FormModel form_model = 2;
  for (int i = 0; i < this->form_model_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->form_model(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRGetFormModelRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_FormModel form_model = 2;
  total_size += 1 * this->form_model_size();
  for (int i = 0; i < this->form_model_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->form_model(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRGetFormModelRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRGetFormModelRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRGetFormModelRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRGetFormModelRsp::MergeFrom(const PB_WRGetFormModelRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  form_model_.MergeFrom(from.form_model_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRGetFormModelRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRGetFormModelRsp::CopyFrom(const PB_WRGetFormModelRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRGetFormModelRsp::IsInitialized() const {
  
  return true;
}

void PB_WRGetFormModelRsp::Swap(PB_WRGetFormModelRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    form_model_.Swap(&other->form_model_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRGetFormModelRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRGetFormModelRsp_descriptor_;
  metadata.reflection = PB_WRGetFormModelRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRFormModelPush::kFormModelFieldNumber;
#endif  // !_MSC_VER

PB_WRFormModelPush::PB_WRFormModelPush() {
  SharedCtor();
}

void PB_WRFormModelPush::InitAsDefaultInstance() {
  form_model_ = const_cast< ::com::sangfor::moa::protobuf::PB_FormModel*>(&::com::sangfor::moa::protobuf::PB_FormModel::default_instance());
}

PB_WRFormModelPush::PB_WRFormModelPush(const PB_WRFormModelPush& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRFormModelPush::SharedCtor() {
  _cached_size_ = 0;
  form_model_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRFormModelPush::~PB_WRFormModelPush() {
  SharedDtor();
}

void PB_WRFormModelPush::SharedDtor() {
  if (this != default_instance_) {
    delete form_model_;
  }
}

const ::google::protobuf::Descriptor* PB_WRFormModelPush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRFormModelPush_descriptor_;
}

const PB_WRFormModelPush& PB_WRFormModelPush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRFormModelPush* PB_WRFormModelPush::default_instance_ = NULL;

PB_WRFormModelPush* PB_WRFormModelPush::New() const {
  return new PB_WRFormModelPush;
}

void PB_WRFormModelPush::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (form_model_ != NULL) form_model_->::com::sangfor::moa::protobuf::PB_FormModel::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRFormModelPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.sangfor.moa.protobuf.PB_FormModel form_model = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_form_model()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRFormModelPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRFormModelPush::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .com.sangfor.moa.protobuf.PB_FormModel form_model = 2;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->form_model(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRFormModelPush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.sangfor.moa.protobuf.PB_FormModel form_model = 2;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->form_model(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRFormModelPush::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.sangfor.moa.protobuf.PB_FormModel form_model = 2;
    if (has_form_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->form_model());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRFormModelPush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRFormModelPush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRFormModelPush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRFormModelPush::MergeFrom(const PB_WRFormModelPush& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_form_model()->::com::sangfor::moa::protobuf::PB_FormModel::MergeFrom(from.form_model());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRFormModelPush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRFormModelPush::CopyFrom(const PB_WRFormModelPush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRFormModelPush::IsInitialized() const {
  
  return true;
}

void PB_WRFormModelPush::Swap(PB_WRFormModelPush* other) {
  if (other != this) {
    std::swap(form_model_, other->form_model_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRFormModelPush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRFormModelPush_descriptor_;
  metadata.reflection = PB_WRFormModelPush_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRWebGetWorkReportsReq::kCountFieldNumber;
const int PB_WRWebGetWorkReportsReq::kStartFieldNumber;
const int PB_WRWebGetWorkReportsReq::kPidFieldNumber;
#endif  // !_MSC_VER

PB_WRWebGetWorkReportsReq::PB_WRWebGetWorkReportsReq() {
  SharedCtor();
}

void PB_WRWebGetWorkReportsReq::InitAsDefaultInstance() {
}

PB_WRWebGetWorkReportsReq::PB_WRWebGetWorkReportsReq(const PB_WRWebGetWorkReportsReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRWebGetWorkReportsReq::SharedCtor() {
  _cached_size_ = 0;
  count_ = GOOGLE_LONGLONG(10);
  start_ = GOOGLE_LONGLONG(0);
  pid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRWebGetWorkReportsReq::~PB_WRWebGetWorkReportsReq() {
  SharedDtor();
}

void PB_WRWebGetWorkReportsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRWebGetWorkReportsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRWebGetWorkReportsReq_descriptor_;
}

const PB_WRWebGetWorkReportsReq& PB_WRWebGetWorkReportsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRWebGetWorkReportsReq* PB_WRWebGetWorkReportsReq::default_instance_ = NULL;

PB_WRWebGetWorkReportsReq* PB_WRWebGetWorkReportsReq::New() const {
  return new PB_WRWebGetWorkReportsReq;
}

void PB_WRWebGetWorkReportsReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = GOOGLE_LONGLONG(10);
    start_ = GOOGLE_LONGLONG(0);
    pid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRWebGetWorkReportsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 count = 1 [default = 10];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_start;
        break;
      }
      
      // optional int64 start = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_pid;
        break;
      }
      
      // optional int64 pid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_pid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &pid_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRWebGetWorkReportsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRWebGetWorkReportsReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 count = 1 [default = 10];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }
  
  // optional int64 start = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start(), output);
  }
  
  // optional int64 pid = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->pid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRWebGetWorkReportsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 count = 1 [default = 10];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }
  
  // optional int64 start = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start(), target);
  }
  
  // optional int64 pid = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->pid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRWebGetWorkReportsReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 count = 1 [default = 10];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
    // optional int64 start = 2;
    if (has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start());
    }
    
    // optional int64 pid = 3;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRWebGetWorkReportsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRWebGetWorkReportsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRWebGetWorkReportsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRWebGetWorkReportsReq::MergeFrom(const PB_WRWebGetWorkReportsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_count(from.count());
    }
    if (from._has_bit(1)) {
      set_start(from.start());
    }
    if (from._has_bit(2)) {
      set_pid(from.pid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRWebGetWorkReportsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRWebGetWorkReportsReq::CopyFrom(const PB_WRWebGetWorkReportsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRWebGetWorkReportsReq::IsInitialized() const {
  
  return true;
}

void PB_WRWebGetWorkReportsReq::Swap(PB_WRWebGetWorkReportsReq* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    std::swap(start_, other->start_);
    std::swap(pid_, other->pid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRWebGetWorkReportsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRWebGetWorkReportsReq_descriptor_;
  metadata.reflection = PB_WRWebGetWorkReportsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRWebGetWorkReportsRsp::kResultFieldNumber;
const int PB_WRWebGetWorkReportsRsp::kWorkreportsFieldNumber;
const int PB_WRWebGetWorkReportsRsp::kTotalFieldNumber;
#endif  // !_MSC_VER

PB_WRWebGetWorkReportsRsp::PB_WRWebGetWorkReportsRsp() {
  SharedCtor();
}

void PB_WRWebGetWorkReportsRsp::InitAsDefaultInstance() {
}

PB_WRWebGetWorkReportsRsp::PB_WRWebGetWorkReportsRsp(const PB_WRWebGetWorkReportsRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRWebGetWorkReportsRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  total_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRWebGetWorkReportsRsp::~PB_WRWebGetWorkReportsRsp() {
  SharedDtor();
}

void PB_WRWebGetWorkReportsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRWebGetWorkReportsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRWebGetWorkReportsRsp_descriptor_;
}

const PB_WRWebGetWorkReportsRsp& PB_WRWebGetWorkReportsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRWebGetWorkReportsRsp* PB_WRWebGetWorkReportsRsp::default_instance_ = NULL;

PB_WRWebGetWorkReportsRsp* PB_WRWebGetWorkReportsRsp::New() const {
  return new PB_WRWebGetWorkReportsRsp;
}

void PB_WRWebGetWorkReportsRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    total_ = GOOGLE_LONGLONG(0);
  }
  workreports_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRWebGetWorkReportsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_workreports;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_workreports:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_workreports()));
        if (input->ExpectTag(18)) goto parse_workreports;
        if (input->ExpectTag(24)) goto parse_total;
        break;
      }
      
      // optional int64 total = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_total:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &total_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRWebGetWorkReportsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRWebGetWorkReportsRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->workreports(i), output);
  }
  
  // optional int64 total = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->total(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRWebGetWorkReportsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->workreports(i), target);
  }
  
  // optional int64 total = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->total(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRWebGetWorkReportsRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int64 total = 3;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  total_size += 1 * this->workreports_size();
  for (int i = 0; i < this->workreports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->workreports(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRWebGetWorkReportsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRWebGetWorkReportsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRWebGetWorkReportsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRWebGetWorkReportsRsp::MergeFrom(const PB_WRWebGetWorkReportsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  workreports_.MergeFrom(from.workreports_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(2)) {
      set_total(from.total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRWebGetWorkReportsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRWebGetWorkReportsRsp::CopyFrom(const PB_WRWebGetWorkReportsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRWebGetWorkReportsRsp::IsInitialized() const {
  
  return true;
}

void PB_WRWebGetWorkReportsRsp::Swap(PB_WRWebGetWorkReportsRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    workreports_.Swap(&other->workreports_);
    std::swap(total_, other->total_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRWebGetWorkReportsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRWebGetWorkReportsRsp_descriptor_;
  metadata.reflection = PB_WRWebGetWorkReportsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRWebGetManagementWorkReportsNumReq::kTypeFieldNumber;
const int PB_WRWebGetManagementWorkReportsNumReq::kStartDateFieldNumber;
const int PB_WRWebGetManagementWorkReportsNumReq::kEndDateFieldNumber;
#endif  // !_MSC_VER

PB_WRWebGetManagementWorkReportsNumReq::PB_WRWebGetManagementWorkReportsNumReq() {
  SharedCtor();
}

void PB_WRWebGetManagementWorkReportsNumReq::InitAsDefaultInstance() {
}

PB_WRWebGetManagementWorkReportsNumReq::PB_WRWebGetManagementWorkReportsNumReq(const PB_WRWebGetManagementWorkReportsNumReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRWebGetManagementWorkReportsNumReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  start_date_ = GOOGLE_LONGLONG(0);
  end_date_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRWebGetManagementWorkReportsNumReq::~PB_WRWebGetManagementWorkReportsNumReq() {
  SharedDtor();
}

void PB_WRWebGetManagementWorkReportsNumReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRWebGetManagementWorkReportsNumReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRWebGetManagementWorkReportsNumReq_descriptor_;
}

const PB_WRWebGetManagementWorkReportsNumReq& PB_WRWebGetManagementWorkReportsNumReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRWebGetManagementWorkReportsNumReq* PB_WRWebGetManagementWorkReportsNumReq::default_instance_ = NULL;

PB_WRWebGetManagementWorkReportsNumReq* PB_WRWebGetManagementWorkReportsNumReq::New() const {
  return new PB_WRWebGetManagementWorkReportsNumReq;
}

void PB_WRWebGetManagementWorkReportsNumReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    start_date_ = GOOGLE_LONGLONG(0);
    end_date_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRWebGetManagementWorkReportsNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_start_date;
        break;
      }
      
      // optional int64 start_date = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_date_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_end_date;
        break;
      }
      
      // optional int64 end_date = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_end_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &end_date_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRWebGetManagementWorkReportsNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRWebGetManagementWorkReportsNumReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 type = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 start_date = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_date(), output);
  }
  
  // optional int64 end_date = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->end_date(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRWebGetManagementWorkReportsNumReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 start_date = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start_date(), target);
  }
  
  // optional int64 end_date = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->end_date(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRWebGetManagementWorkReportsNumReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 start_date = 2;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_date());
    }
    
    // optional int64 end_date = 3;
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_date());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRWebGetManagementWorkReportsNumReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRWebGetManagementWorkReportsNumReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRWebGetManagementWorkReportsNumReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRWebGetManagementWorkReportsNumReq::MergeFrom(const PB_WRWebGetManagementWorkReportsNumReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type(from.type());
    }
    if (from._has_bit(1)) {
      set_start_date(from.start_date());
    }
    if (from._has_bit(2)) {
      set_end_date(from.end_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRWebGetManagementWorkReportsNumReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRWebGetManagementWorkReportsNumReq::CopyFrom(const PB_WRWebGetManagementWorkReportsNumReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRWebGetManagementWorkReportsNumReq::IsInitialized() const {
  
  return true;
}

void PB_WRWebGetManagementWorkReportsNumReq::Swap(PB_WRWebGetManagementWorkReportsNumReq* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(start_date_, other->start_date_);
    std::swap(end_date_, other->end_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRWebGetManagementWorkReportsNumReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRWebGetManagementWorkReportsNumReq_descriptor_;
  metadata.reflection = PB_WRWebGetManagementWorkReportsNumReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::kDateFieldNumber;
const int PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::kCountFieldNumber;
const int PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::kReadStatusFieldNumber;
const int PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::kReadTimeFieldNumber;
#endif  // !_MSC_VER

PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::PB_WRWebGetManagementWorkReportsNumRsp_PB_Record() {
  SharedCtor();
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::InitAsDefaultInstance() {
}

PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::PB_WRWebGetManagementWorkReportsNumRsp_PB_Record(const PB_WRWebGetManagementWorkReportsNumRsp_PB_Record& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::SharedCtor() {
  _cached_size_ = 0;
  date_ = GOOGLE_LONGLONG(0);
  count_ = GOOGLE_LONGLONG(0);
  read_status_ = 0;
  read_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::~PB_WRWebGetManagementWorkReportsNumRsp_PB_Record() {
  SharedDtor();
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_descriptor_;
}

const PB_WRWebGetManagementWorkReportsNumRsp_PB_Record& PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRWebGetManagementWorkReportsNumRsp_PB_Record* PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::default_instance_ = NULL;

PB_WRWebGetManagementWorkReportsNumRsp_PB_Record* PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::New() const {
  return new PB_WRWebGetManagementWorkReportsNumRsp_PB_Record;
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    date_ = GOOGLE_LONGLONG(0);
    count_ = GOOGLE_LONGLONG(0);
    read_status_ = 0;
    read_time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 date = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &date_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }
      
      // optional int64 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_count:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &count_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_read_status;
        break;
      }
      
      // optional int32 read_status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_read_status:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &read_status_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_read_time;
        break;
      }
      
      // optional int64 read_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_read_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &read_time_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 date = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->date(), output);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }
  
  // optional int32 read_status = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->read_status(), output);
  }
  
  // optional int64 read_time = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->read_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 date = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->date(), target);
  }
  
  // optional int64 count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }
  
  // optional int32 read_status = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->read_status(), target);
  }
  
  // optional int64 read_time = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->read_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 date = 1;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date());
    }
    
    // optional int64 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }
    
    // optional int32 read_status = 3;
    if (has_read_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->read_status());
    }
    
    // optional int64 read_time = 4;
    if (has_read_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->read_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRWebGetManagementWorkReportsNumRsp_PB_Record* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRWebGetManagementWorkReportsNumRsp_PB_Record*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::MergeFrom(const PB_WRWebGetManagementWorkReportsNumRsp_PB_Record& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_date(from.date());
    }
    if (from._has_bit(1)) {
      set_count(from.count());
    }
    if (from._has_bit(2)) {
      set_read_status(from.read_status());
    }
    if (from._has_bit(3)) {
      set_read_time(from.read_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::CopyFrom(const PB_WRWebGetManagementWorkReportsNumRsp_PB_Record& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::IsInitialized() const {
  
  return true;
}

void PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::Swap(PB_WRWebGetManagementWorkReportsNumRsp_PB_Record* other) {
  if (other != this) {
    std::swap(date_, other->date_);
    std::swap(count_, other->count_);
    std::swap(read_status_, other->read_status_);
    std::swap(read_time_, other->read_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRWebGetManagementWorkReportsNumRsp_PB_Record::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_descriptor_;
  metadata.reflection = PB_WRWebGetManagementWorkReportsNumRsp_PB_Record_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_WRWebGetManagementWorkReportsNumRsp::kResultFieldNumber;
const int PB_WRWebGetManagementWorkReportsNumRsp::kRecordsFieldNumber;
const int PB_WRWebGetManagementWorkReportsNumRsp::kFistDateFieldNumber;
#endif  // !_MSC_VER

PB_WRWebGetManagementWorkReportsNumRsp::PB_WRWebGetManagementWorkReportsNumRsp() {
  SharedCtor();
}

void PB_WRWebGetManagementWorkReportsNumRsp::InitAsDefaultInstance() {
}

PB_WRWebGetManagementWorkReportsNumRsp::PB_WRWebGetManagementWorkReportsNumRsp(const PB_WRWebGetManagementWorkReportsNumRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRWebGetManagementWorkReportsNumRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  fist_date_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRWebGetManagementWorkReportsNumRsp::~PB_WRWebGetManagementWorkReportsNumRsp() {
  SharedDtor();
}

void PB_WRWebGetManagementWorkReportsNumRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRWebGetManagementWorkReportsNumRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRWebGetManagementWorkReportsNumRsp_descriptor_;
}

const PB_WRWebGetManagementWorkReportsNumRsp& PB_WRWebGetManagementWorkReportsNumRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRWebGetManagementWorkReportsNumRsp* PB_WRWebGetManagementWorkReportsNumRsp::default_instance_ = NULL;

PB_WRWebGetManagementWorkReportsNumRsp* PB_WRWebGetManagementWorkReportsNumRsp::New() const {
  return new PB_WRWebGetManagementWorkReportsNumRsp;
}

void PB_WRWebGetManagementWorkReportsNumRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    fist_date_ = GOOGLE_LONGLONG(0);
  }
  records_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRWebGetManagementWorkReportsNumRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_records;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WRWebGetManagementWorkReportsNumRsp.PB_Record records = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_records:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_records()));
        if (input->ExpectTag(18)) goto parse_records;
        if (input->ExpectTag(24)) goto parse_fist_date;
        break;
      }
      
      // optional int64 fist_date = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_fist_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &fist_date_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRWebGetManagementWorkReportsNumRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRWebGetManagementWorkReportsNumRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRWebGetManagementWorkReportsNumRsp.PB_Record records = 2;
  for (int i = 0; i < this->records_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->records(i), output);
  }
  
  // optional int64 fist_date = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->fist_date(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRWebGetManagementWorkReportsNumRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRWebGetManagementWorkReportsNumRsp.PB_Record records = 2;
  for (int i = 0; i < this->records_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->records(i), target);
  }
  
  // optional int64 fist_date = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->fist_date(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRWebGetManagementWorkReportsNumRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int64 fist_date = 3;
    if (has_fist_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fist_date());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WRWebGetManagementWorkReportsNumRsp.PB_Record records = 2;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRWebGetManagementWorkReportsNumRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRWebGetManagementWorkReportsNumRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRWebGetManagementWorkReportsNumRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRWebGetManagementWorkReportsNumRsp::MergeFrom(const PB_WRWebGetManagementWorkReportsNumRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  records_.MergeFrom(from.records_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(2)) {
      set_fist_date(from.fist_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRWebGetManagementWorkReportsNumRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRWebGetManagementWorkReportsNumRsp::CopyFrom(const PB_WRWebGetManagementWorkReportsNumRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRWebGetManagementWorkReportsNumRsp::IsInitialized() const {
  
  return true;
}

void PB_WRWebGetManagementWorkReportsNumRsp::Swap(PB_WRWebGetManagementWorkReportsNumRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    records_.Swap(&other->records_);
    std::swap(fist_date_, other->fist_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRWebGetManagementWorkReportsNumRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRWebGetManagementWorkReportsNumRsp_descriptor_;
  metadata.reflection = PB_WRWebGetManagementWorkReportsNumRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRExportWorkReportsReq::kTypesFieldNumber;
const int PB_WRExportWorkReportsReq::kGidsFieldNumber;
const int PB_WRExportWorkReportsReq::kPidsFieldNumber;
const int PB_WRExportWorkReportsReq::kStartDateFieldNumber;
const int PB_WRExportWorkReportsReq::kEndDateFieldNumber;
const int PB_WRExportWorkReportsReq::kLimitFieldNumber;
const int PB_WRExportWorkReportsReq::kSkipFieldNumber;
#endif  // !_MSC_VER

PB_WRExportWorkReportsReq::PB_WRExportWorkReportsReq() {
  SharedCtor();
}

void PB_WRExportWorkReportsReq::InitAsDefaultInstance() {
}

PB_WRExportWorkReportsReq::PB_WRExportWorkReportsReq(const PB_WRExportWorkReportsReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRExportWorkReportsReq::SharedCtor() {
  _cached_size_ = 0;
  start_date_ = GOOGLE_LONGLONG(0);
  end_date_ = GOOGLE_LONGLONG(0);
  limit_ = GOOGLE_LONGLONG(0);
  skip_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRExportWorkReportsReq::~PB_WRExportWorkReportsReq() {
  SharedDtor();
}

void PB_WRExportWorkReportsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRExportWorkReportsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRExportWorkReportsReq_descriptor_;
}

const PB_WRExportWorkReportsReq& PB_WRExportWorkReportsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRExportWorkReportsReq* PB_WRExportWorkReportsReq::default_instance_ = NULL;

PB_WRExportWorkReportsReq* PB_WRExportWorkReportsReq::New() const {
  return new PB_WRExportWorkReportsReq;
}

void PB_WRExportWorkReportsReq::Clear() {
  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    start_date_ = GOOGLE_LONGLONG(0);
    end_date_ = GOOGLE_LONGLONG(0);
    limit_ = GOOGLE_LONGLONG(0);
    skip_ = GOOGLE_LONGLONG(0);
  }
  types_.Clear();
  gids_.Clear();
  pids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRExportWorkReportsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 types = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_types:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_types(value);
        if (input->ExpectTag(8)) goto parse_types;
        if (input->ExpectTag(16)) goto parse_gids;
        break;
      }
      
      // repeated int64 gids = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_gids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_gids(value);
        if (input->ExpectTag(16)) goto parse_gids;
        if (input->ExpectTag(24)) goto parse_pids;
        break;
      }
      
      // repeated int64 pids = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_pids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_pids(value);
        if (input->ExpectTag(24)) goto parse_pids;
        if (input->ExpectTag(32)) goto parse_start_date;
        break;
      }
      
      // optional int64 start_date = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_start_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &start_date_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_end_date;
        break;
      }
      
      // optional int64 end_date = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_end_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &end_date_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_limit;
        break;
      }
      
      // optional int64 limit = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_limit:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &limit_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_skip;
        break;
      }
      
      // optional int64 skip = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_skip:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &skip_));
        _set_bit(6);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRExportWorkReportsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRExportWorkReportsReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated int32 types = 1;
  for (int i = 0; i < this->types_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->types(i), output);
  }
  
  // repeated int64 gids = 2;
  for (int i = 0; i < this->gids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->gids(i), output);
  }
  
  // repeated int64 pids = 3;
  for (int i = 0; i < this->pids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->pids(i), output);
  }
  
  // optional int64 start_date = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->start_date(), output);
  }
  
  // optional int64 end_date = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->end_date(), output);
  }
  
  // optional int64 limit = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->limit(), output);
  }
  
  // optional int64 skip = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->skip(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRExportWorkReportsReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 types = 1;
  for (int i = 0; i < this->types_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->types(i), target);
  }
  
  // repeated int64 gids = 2;
  for (int i = 0; i < this->gids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->gids(i), target);
  }
  
  // repeated int64 pids = 3;
  for (int i = 0; i < this->pids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->pids(i), target);
  }
  
  // optional int64 start_date = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->start_date(), target);
  }
  
  // optional int64 end_date = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->end_date(), target);
  }
  
  // optional int64 limit = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->limit(), target);
  }
  
  // optional int64 skip = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->skip(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRExportWorkReportsReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // optional int64 start_date = 4;
    if (has_start_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_date());
    }
    
    // optional int64 end_date = 5;
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_date());
    }
    
    // optional int64 limit = 6;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->limit());
    }
    
    // optional int64 skip = 7;
    if (has_skip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->skip());
    }
    
  }
  // repeated int32 types = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->types_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->types(i));
    }
    total_size += 1 * this->types_size() + data_size;
  }
  
  // repeated int64 gids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->gids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->gids(i));
    }
    total_size += 1 * this->gids_size() + data_size;
  }
  
  // repeated int64 pids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->pids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->pids(i));
    }
    total_size += 1 * this->pids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRExportWorkReportsReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRExportWorkReportsReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRExportWorkReportsReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRExportWorkReportsReq::MergeFrom(const PB_WRExportWorkReportsReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  types_.MergeFrom(from.types_);
  gids_.MergeFrom(from.gids_);
  pids_.MergeFrom(from.pids_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from._has_bit(3)) {
      set_start_date(from.start_date());
    }
    if (from._has_bit(4)) {
      set_end_date(from.end_date());
    }
    if (from._has_bit(5)) {
      set_limit(from.limit());
    }
    if (from._has_bit(6)) {
      set_skip(from.skip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRExportWorkReportsReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRExportWorkReportsReq::CopyFrom(const PB_WRExportWorkReportsReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRExportWorkReportsReq::IsInitialized() const {
  
  return true;
}

void PB_WRExportWorkReportsReq::Swap(PB_WRExportWorkReportsReq* other) {
  if (other != this) {
    types_.Swap(&other->types_);
    gids_.Swap(&other->gids_);
    pids_.Swap(&other->pids_);
    std::swap(start_date_, other->start_date_);
    std::swap(end_date_, other->end_date_);
    std::swap(limit_, other->limit_);
    std::swap(skip_, other->skip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRExportWorkReportsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRExportWorkReportsReq_descriptor_;
  metadata.reflection = PB_WRExportWorkReportsReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRExportWorkReportsRsp::kResultFieldNumber;
const int PB_WRExportWorkReportsRsp::kWorkreportsFieldNumber;
#endif  // !_MSC_VER

PB_WRExportWorkReportsRsp::PB_WRExportWorkReportsRsp() {
  SharedCtor();
}

void PB_WRExportWorkReportsRsp::InitAsDefaultInstance() {
}

PB_WRExportWorkReportsRsp::PB_WRExportWorkReportsRsp(const PB_WRExportWorkReportsRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRExportWorkReportsRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRExportWorkReportsRsp::~PB_WRExportWorkReportsRsp() {
  SharedDtor();
}

void PB_WRExportWorkReportsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRExportWorkReportsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRExportWorkReportsRsp_descriptor_;
}

const PB_WRExportWorkReportsRsp& PB_WRExportWorkReportsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRExportWorkReportsRsp* PB_WRExportWorkReportsRsp::default_instance_ = NULL;

PB_WRExportWorkReportsRsp* PB_WRExportWorkReportsRsp::New() const {
  return new PB_WRExportWorkReportsRsp;
}

void PB_WRExportWorkReportsRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  workreports_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRExportWorkReportsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_workreports;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_workreports:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_workreports()));
        if (input->ExpectTag(18)) goto parse_workreports;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRExportWorkReportsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRExportWorkReportsRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->workreports(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRExportWorkReportsRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  for (int i = 0; i < this->workreports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->workreports(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRExportWorkReportsRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WorkReport workreports = 2;
  total_size += 1 * this->workreports_size();
  for (int i = 0; i < this->workreports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->workreports(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRExportWorkReportsRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRExportWorkReportsRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRExportWorkReportsRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRExportWorkReportsRsp::MergeFrom(const PB_WRExportWorkReportsRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  workreports_.MergeFrom(from.workreports_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRExportWorkReportsRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRExportWorkReportsRsp::CopyFrom(const PB_WRExportWorkReportsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRExportWorkReportsRsp::IsInitialized() const {
  
  return true;
}

void PB_WRExportWorkReportsRsp::Swap(PB_WRExportWorkReportsRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    workreports_.Swap(&other->workreports_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRExportWorkReportsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRExportWorkReportsRsp_descriptor_;
  metadata.reflection = PB_WRExportWorkReportsRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRWorkReportCountReq::kDidsFieldNumber;
#endif  // !_MSC_VER

PB_WRWorkReportCountReq::PB_WRWorkReportCountReq() {
  SharedCtor();
}

void PB_WRWorkReportCountReq::InitAsDefaultInstance() {
}

PB_WRWorkReportCountReq::PB_WRWorkReportCountReq(const PB_WRWorkReportCountReq& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRWorkReportCountReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRWorkReportCountReq::~PB_WRWorkReportCountReq() {
  SharedDtor();
}

void PB_WRWorkReportCountReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRWorkReportCountReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRWorkReportCountReq_descriptor_;
}

const PB_WRWorkReportCountReq& PB_WRWorkReportCountReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRWorkReportCountReq* PB_WRWorkReportCountReq::default_instance_ = NULL;

PB_WRWorkReportCountReq* PB_WRWorkReportCountReq::New() const {
  return new PB_WRWorkReportCountReq;
}

void PB_WRWorkReportCountReq::Clear() {
  dids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRWorkReportCountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 dids = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_dids(value);
        if (input->ExpectTag(8)) goto parse_dids;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRWorkReportCountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRWorkReportCountReq::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated int64 dids = 1;
  for (int i = 0; i < this->dids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->dids(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRWorkReportCountReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 dids = 1;
  for (int i = 0; i < this->dids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->dids(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRWorkReportCountReq::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 dids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->dids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->dids(i));
    }
    total_size += 1 * this->dids_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRWorkReportCountReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRWorkReportCountReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRWorkReportCountReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRWorkReportCountReq::MergeFrom(const PB_WRWorkReportCountReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  dids_.MergeFrom(from.dids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRWorkReportCountReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRWorkReportCountReq::CopyFrom(const PB_WRWorkReportCountReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRWorkReportCountReq::IsInitialized() const {
  
  return true;
}

void PB_WRWorkReportCountReq::Swap(PB_WRWorkReportCountReq* other) {
  if (other != this) {
    dids_.Swap(&other->dids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRWorkReportCountReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRWorkReportCountReq_descriptor_;
  metadata.reflection = PB_WRWorkReportCountReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_WRWorkReportCountRsp_PB_WRDidCount::kDidFieldNumber;
const int PB_WRWorkReportCountRsp_PB_WRDidCount::kCntFieldNumber;
#endif  // !_MSC_VER

PB_WRWorkReportCountRsp_PB_WRDidCount::PB_WRWorkReportCountRsp_PB_WRDidCount() {
  SharedCtor();
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::InitAsDefaultInstance() {
}

PB_WRWorkReportCountRsp_PB_WRDidCount::PB_WRWorkReportCountRsp_PB_WRDidCount(const PB_WRWorkReportCountRsp_PB_WRDidCount& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::SharedCtor() {
  _cached_size_ = 0;
  did_ = GOOGLE_LONGLONG(0);
  cnt_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRWorkReportCountRsp_PB_WRDidCount::~PB_WRWorkReportCountRsp_PB_WRDidCount() {
  SharedDtor();
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRWorkReportCountRsp_PB_WRDidCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRWorkReportCountRsp_PB_WRDidCount_descriptor_;
}

const PB_WRWorkReportCountRsp_PB_WRDidCount& PB_WRWorkReportCountRsp_PB_WRDidCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRWorkReportCountRsp_PB_WRDidCount* PB_WRWorkReportCountRsp_PB_WRDidCount::default_instance_ = NULL;

PB_WRWorkReportCountRsp_PB_WRDidCount* PB_WRWorkReportCountRsp_PB_WRDidCount::New() const {
  return new PB_WRWorkReportCountRsp_PB_WRDidCount;
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    did_ = GOOGLE_LONGLONG(0);
    cnt_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRWorkReportCountRsp_PB_WRDidCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 did = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &did_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_cnt;
        break;
      }
      
      // optional int64 cnt = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_cnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &cnt_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRWorkReportCountRsp_PB_WRDidCount::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 did = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->did(), output);
  }
  
  // optional int64 cnt = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cnt(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRWorkReportCountRsp_PB_WRDidCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 did = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->did(), target);
  }
  
  // optional int64 cnt = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cnt(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRWorkReportCountRsp_PB_WRDidCount::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 did = 1;
    if (has_did()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->did());
    }
    
    // optional int64 cnt = 2;
    if (has_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cnt());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRWorkReportCountRsp_PB_WRDidCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRWorkReportCountRsp_PB_WRDidCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::MergeFrom(const PB_WRWorkReportCountRsp_PB_WRDidCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_did(from.did());
    }
    if (from._has_bit(1)) {
      set_cnt(from.cnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::CopyFrom(const PB_WRWorkReportCountRsp_PB_WRDidCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRWorkReportCountRsp_PB_WRDidCount::IsInitialized() const {
  
  return true;
}

void PB_WRWorkReportCountRsp_PB_WRDidCount::Swap(PB_WRWorkReportCountRsp_PB_WRDidCount* other) {
  if (other != this) {
    std::swap(did_, other->did_);
    std::swap(cnt_, other->cnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRWorkReportCountRsp_PB_WRDidCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRWorkReportCountRsp_PB_WRDidCount_descriptor_;
  metadata.reflection = PB_WRWorkReportCountRsp_PB_WRDidCount_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_WRWorkReportCountRsp::kResultFieldNumber;
const int PB_WRWorkReportCountRsp::kDidCntsFieldNumber;
#endif  // !_MSC_VER

PB_WRWorkReportCountRsp::PB_WRWorkReportCountRsp() {
  SharedCtor();
}

void PB_WRWorkReportCountRsp::InitAsDefaultInstance() {
}

PB_WRWorkReportCountRsp::PB_WRWorkReportCountRsp(const PB_WRWorkReportCountRsp& from) {
  SharedCtor();
  MergeFrom(from);
}

void PB_WRWorkReportCountRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_WRWorkReportCountRsp::~PB_WRWorkReportCountRsp() {
  SharedDtor();
}

void PB_WRWorkReportCountRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PB_WRWorkReportCountRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_WRWorkReportCountRsp_descriptor_;
}

const PB_WRWorkReportCountRsp& PB_WRWorkReportCountRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_workreport_2eproto();  return *default_instance_;
}

PB_WRWorkReportCountRsp* PB_WRWorkReportCountRsp::default_instance_ = NULL;

PB_WRWorkReportCountRsp* PB_WRWorkReportCountRsp::New() const {
  return new PB_WRWorkReportCountRsp;
}

void PB_WRWorkReportCountRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  did_cnts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_WRWorkReportCountRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_did_cnts;
        break;
      }
      
      // repeated .com.sangfor.moa.protobuf.PB_WRWorkReportCountRsp.PB_WRDidCount did_cnts = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_did_cnts:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_did_cnts()));
        if (input->ExpectTag(18)) goto parse_did_cnts;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_WRWorkReportCountRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PB_WRWorkReportCountRsp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRWorkReportCountRsp.PB_WRDidCount did_cnts = 2;
  for (int i = 0; i < this->did_cnts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->did_cnts(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_WRWorkReportCountRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .com.sangfor.moa.protobuf.PB_WRWorkReportCountRsp.PB_WRDidCount did_cnts = 2;
  for (int i = 0; i < this->did_cnts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->did_cnts(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_WRWorkReportCountRsp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .com.sangfor.moa.protobuf.PB_WRWorkReportCountRsp.PB_WRDidCount did_cnts = 2;
  total_size += 1 * this->did_cnts_size();
  for (int i = 0; i < this->did_cnts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->did_cnts(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PB_WRWorkReportCountRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_WRWorkReportCountRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_WRWorkReportCountRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_WRWorkReportCountRsp::MergeFrom(const PB_WRWorkReportCountRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  did_cnts_.MergeFrom(from.did_cnts_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_WRWorkReportCountRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_WRWorkReportCountRsp::CopyFrom(const PB_WRWorkReportCountRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_WRWorkReportCountRsp::IsInitialized() const {
  
  return true;
}

void PB_WRWorkReportCountRsp::Swap(PB_WRWorkReportCountRsp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    did_cnts_.Swap(&other->did_cnts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_WRWorkReportCountRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_WRWorkReportCountRsp_descriptor_;
  metadata.reflection = PB_WRWorkReportCountRsp_reflection_;
  return metadata;
}


}  // namespace protobuf
}  // namespace moa
}  // namespace sangfor
}  // namespace com
